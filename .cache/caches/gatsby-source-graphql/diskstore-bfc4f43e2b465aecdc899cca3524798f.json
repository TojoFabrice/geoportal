{"expireTime":9007200906388242000,"key":"gatsby-source-graphql-schema-api-api","val":"schema {\n  query: query_root\n  mutation: mutation_root\n  subscription: subscription_root\n}\n\n\"\"\"whether this query should be cached (Hasura Cloud only)\"\"\"\ndirective @cached(\n  \"\"\"measured in seconds\"\"\"\n  ttl: Int! = 60\n\n  \"\"\"refresh the cache entry\"\"\"\n  refresh: Boolean! = false\n) on QUERY\n\n\"\"\"\nBoolean expression to compare columns of type \"Boolean\". All fields are combined with logical 'AND'.\n\"\"\"\ninput Boolean_comparison_exp {\n  _eq: Boolean\n  _gt: Boolean\n  _gte: Boolean\n  _in: [Boolean!]\n  _is_null: Boolean\n  _lt: Boolean\n  _lte: Boolean\n  _neq: Boolean\n  _nin: [Boolean!]\n}\n\n\"\"\"\nBoolean expression to compare columns of type \"Int\". All fields are combined with logical 'AND'.\n\"\"\"\ninput Int_comparison_exp {\n  _eq: Int\n  _gt: Int\n  _gte: Int\n  _in: [Int!]\n  _is_null: Boolean\n  _lt: Int\n  _lte: Int\n  _neq: Int\n  _nin: [Int!]\n}\n\n\"\"\"\nBoolean expression to compare columns of type \"String\". All fields are combined with logical 'AND'.\n\"\"\"\ninput String_comparison_exp {\n  _eq: String\n  _gt: String\n  _gte: String\n\n  \"\"\"does the column match the given case-insensitive pattern\"\"\"\n  _ilike: String\n  _in: [String!]\n\n  \"\"\"\n  does the column match the given POSIX regular expression, case insensitive\n  \"\"\"\n  _iregex: String\n  _is_null: Boolean\n\n  \"\"\"does the column match the given pattern\"\"\"\n  _like: String\n  _lt: String\n  _lte: String\n  _neq: String\n\n  \"\"\"does the column NOT match the given case-insensitive pattern\"\"\"\n  _nilike: String\n  _nin: [String!]\n\n  \"\"\"\n  does the column NOT match the given POSIX regular expression, case insensitive\n  \"\"\"\n  _niregex: String\n\n  \"\"\"does the column NOT match the given pattern\"\"\"\n  _nlike: String\n\n  \"\"\"\n  does the column NOT match the given POSIX regular expression, case sensitive\n  \"\"\"\n  _nregex: String\n\n  \"\"\"does the column NOT match the given SQL regular expression\"\"\"\n  _nsimilar: String\n\n  \"\"\"\n  does the column match the given POSIX regular expression, case sensitive\n  \"\"\"\n  _regex: String\n\n  \"\"\"does the column match the given SQL regular expression\"\"\"\n  _similar: String\n}\n\n\"\"\"\ncolumns and relationships of \"categories\"\n\"\"\"\ntype categories {\n  \"\"\"\n  fetch data from the table: \"categories\"\n  \"\"\"\n  categories(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [categories_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [categories_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: categories_bool_exp\n  ): [categories!]!\n\n  \"\"\"An aggregate relationship\"\"\"\n  categories_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [categories_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [categories_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: categories_bool_exp\n  ): categories_aggregate!\n\n  \"\"\"An object relationship\"\"\"\n  category: categories\n  id: uuid!\n  name: String!\n\n  \"\"\"An array relationship\"\"\"\n  page_categories(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [page_categorie_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [page_categorie_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: page_categorie_bool_exp\n  ): [page_categorie!]!\n\n  \"\"\"An aggregate relationship\"\"\"\n  page_categories_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [page_categorie_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [page_categorie_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: page_categorie_bool_exp\n  ): page_categorie_aggregate!\n  parent_id: uuid\n  position: Int\n}\n\n\"\"\"\naggregated selection of \"categories\"\n\"\"\"\ntype categories_aggregate {\n  aggregate: categories_aggregate_fields\n  nodes: [categories!]!\n}\n\n\"\"\"\naggregate fields of \"categories\"\n\"\"\"\ntype categories_aggregate_fields {\n  avg: categories_avg_fields\n  count(columns: [categories_select_column!], distinct: Boolean): Int!\n  max: categories_max_fields\n  min: categories_min_fields\n  stddev: categories_stddev_fields\n  stddev_pop: categories_stddev_pop_fields\n  stddev_samp: categories_stddev_samp_fields\n  sum: categories_sum_fields\n  var_pop: categories_var_pop_fields\n  var_samp: categories_var_samp_fields\n  variance: categories_variance_fields\n}\n\n\"\"\"\norder by aggregate values of table \"categories\"\n\"\"\"\ninput categories_aggregate_order_by {\n  avg: categories_avg_order_by\n  count: order_by\n  max: categories_max_order_by\n  min: categories_min_order_by\n  stddev: categories_stddev_order_by\n  stddev_pop: categories_stddev_pop_order_by\n  stddev_samp: categories_stddev_samp_order_by\n  sum: categories_sum_order_by\n  var_pop: categories_var_pop_order_by\n  var_samp: categories_var_samp_order_by\n  variance: categories_variance_order_by\n}\n\n\"\"\"\ninput type for inserting array relation for remote table \"categories\"\n\"\"\"\ninput categories_arr_rel_insert_input {\n  data: [categories_insert_input!]!\n\n  \"\"\"upsert condition\"\"\"\n  on_conflict: categories_on_conflict\n}\n\n\"\"\"aggregate avg on columns\"\"\"\ntype categories_avg_fields {\n  position: Float\n}\n\n\"\"\"\norder by avg() on columns of table \"categories\"\n\"\"\"\ninput categories_avg_order_by {\n  position: order_by\n}\n\n\"\"\"\nBoolean expression to filter rows from the table \"categories\". All fields are combined with a logical 'AND'.\n\"\"\"\ninput categories_bool_exp {\n  _and: [categories_bool_exp!]\n  _not: categories_bool_exp\n  _or: [categories_bool_exp!]\n  categories: categories_bool_exp\n  category: categories_bool_exp\n  id: uuid_comparison_exp\n  name: String_comparison_exp\n  page_categories: page_categorie_bool_exp\n  parent_id: uuid_comparison_exp\n  position: Int_comparison_exp\n}\n\n\"\"\"\nunique or primary key constraints on table \"categories\"\n\"\"\"\nenum categories_constraint {\n  \"\"\"unique or primary key constraint\"\"\"\n  Categories_pkey\n}\n\n\"\"\"\ninput type for incrementing numeric columns in table \"categories\"\n\"\"\"\ninput categories_inc_input {\n  position: Int\n}\n\n\"\"\"\ninput type for inserting data into table \"categories\"\n\"\"\"\ninput categories_insert_input {\n  categories: categories_arr_rel_insert_input\n  category: categories_obj_rel_insert_input\n  id: uuid\n  name: String\n  page_categories: page_categorie_arr_rel_insert_input\n  parent_id: uuid\n  position: Int\n}\n\n\"\"\"aggregate max on columns\"\"\"\ntype categories_max_fields {\n  id: uuid\n  name: String\n  parent_id: uuid\n  position: Int\n}\n\n\"\"\"\norder by max() on columns of table \"categories\"\n\"\"\"\ninput categories_max_order_by {\n  id: order_by\n  name: order_by\n  parent_id: order_by\n  position: order_by\n}\n\n\"\"\"aggregate min on columns\"\"\"\ntype categories_min_fields {\n  id: uuid\n  name: String\n  parent_id: uuid\n  position: Int\n}\n\n\"\"\"\norder by min() on columns of table \"categories\"\n\"\"\"\ninput categories_min_order_by {\n  id: order_by\n  name: order_by\n  parent_id: order_by\n  position: order_by\n}\n\n\"\"\"\nresponse of any mutation on the table \"categories\"\n\"\"\"\ntype categories_mutation_response {\n  \"\"\"number of rows affected by the mutation\"\"\"\n  affected_rows: Int!\n\n  \"\"\"data from the rows affected by the mutation\"\"\"\n  returning: [categories!]!\n}\n\n\"\"\"\ninput type for inserting object relation for remote table \"categories\"\n\"\"\"\ninput categories_obj_rel_insert_input {\n  data: categories_insert_input!\n\n  \"\"\"upsert condition\"\"\"\n  on_conflict: categories_on_conflict\n}\n\n\"\"\"\non_conflict condition type for table \"categories\"\n\"\"\"\ninput categories_on_conflict {\n  constraint: categories_constraint!\n  update_columns: [categories_update_column!]! = []\n  where: categories_bool_exp\n}\n\n\"\"\"Ordering options when selecting data from \"categories\".\"\"\"\ninput categories_order_by {\n  categories_aggregate: categories_aggregate_order_by\n  category: categories_order_by\n  id: order_by\n  name: order_by\n  page_categories_aggregate: page_categorie_aggregate_order_by\n  parent_id: order_by\n  position: order_by\n}\n\n\"\"\"primary key columns input for table: categories\"\"\"\ninput categories_pk_columns_input {\n  id: uuid!\n}\n\n\"\"\"\nselect columns of table \"categories\"\n\"\"\"\nenum categories_select_column {\n  \"\"\"column name\"\"\"\n  id\n\n  \"\"\"column name\"\"\"\n  name\n\n  \"\"\"column name\"\"\"\n  parent_id\n\n  \"\"\"column name\"\"\"\n  position\n}\n\n\"\"\"\ninput type for updating data in table \"categories\"\n\"\"\"\ninput categories_set_input {\n  id: uuid\n  name: String\n  parent_id: uuid\n  position: Int\n}\n\n\"\"\"aggregate stddev on columns\"\"\"\ntype categories_stddev_fields {\n  position: Float\n}\n\n\"\"\"\norder by stddev() on columns of table \"categories\"\n\"\"\"\ninput categories_stddev_order_by {\n  position: order_by\n}\n\n\"\"\"aggregate stddev_pop on columns\"\"\"\ntype categories_stddev_pop_fields {\n  position: Float\n}\n\n\"\"\"\norder by stddev_pop() on columns of table \"categories\"\n\"\"\"\ninput categories_stddev_pop_order_by {\n  position: order_by\n}\n\n\"\"\"aggregate stddev_samp on columns\"\"\"\ntype categories_stddev_samp_fields {\n  position: Float\n}\n\n\"\"\"\norder by stddev_samp() on columns of table \"categories\"\n\"\"\"\ninput categories_stddev_samp_order_by {\n  position: order_by\n}\n\n\"\"\"aggregate sum on columns\"\"\"\ntype categories_sum_fields {\n  position: Int\n}\n\n\"\"\"\norder by sum() on columns of table \"categories\"\n\"\"\"\ninput categories_sum_order_by {\n  position: order_by\n}\n\n\"\"\"\nupdate columns of table \"categories\"\n\"\"\"\nenum categories_update_column {\n  \"\"\"column name\"\"\"\n  id\n\n  \"\"\"column name\"\"\"\n  name\n\n  \"\"\"column name\"\"\"\n  parent_id\n\n  \"\"\"column name\"\"\"\n  position\n}\n\n\"\"\"aggregate var_pop on columns\"\"\"\ntype categories_var_pop_fields {\n  position: Float\n}\n\n\"\"\"\norder by var_pop() on columns of table \"categories\"\n\"\"\"\ninput categories_var_pop_order_by {\n  position: order_by\n}\n\n\"\"\"aggregate var_samp on columns\"\"\"\ntype categories_var_samp_fields {\n  position: Float\n}\n\n\"\"\"\norder by var_samp() on columns of table \"categories\"\n\"\"\"\ninput categories_var_samp_order_by {\n  position: order_by\n}\n\n\"\"\"aggregate variance on columns\"\"\"\ntype categories_variance_fields {\n  position: Float\n}\n\n\"\"\"\norder by variance() on columns of table \"categories\"\n\"\"\"\ninput categories_variance_order_by {\n  position: order_by\n}\n\nscalar date\n\n\"\"\"\nBoolean expression to compare columns of type \"date\". All fields are combined with logical 'AND'.\n\"\"\"\ninput date_comparison_exp {\n  _eq: date\n  _gt: date\n  _gte: date\n  _in: [date!]\n  _is_null: Boolean\n  _lt: date\n  _lte: date\n  _neq: date\n  _nin: [date!]\n}\n\n\"\"\"\ncolumns and relationships of \"documents\"\n\"\"\"\ntype documents {\n  created_at: timestamptz!\n  id: uuid!\n  name: String!\n\n  \"\"\"An array relationship\"\"\"\n  page_documents(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [page_document_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [page_document_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: page_document_bool_exp\n  ): [page_document!]!\n\n  \"\"\"An aggregate relationship\"\"\"\n  page_documents_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [page_document_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [page_document_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: page_document_bool_exp\n  ): page_document_aggregate!\n\n  \"\"\"An array relationship\"\"\"\n  post_documents(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [post_document_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [post_document_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: post_document_bool_exp\n  ): [post_document!]!\n\n  \"\"\"An aggregate relationship\"\"\"\n  post_documents_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [post_document_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [post_document_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: post_document_bool_exp\n  ): post_document_aggregate!\n  tus_id: String!\n  type: String!\n  updated_at: timestamptz!\n}\n\n\"\"\"\naggregated selection of \"documents\"\n\"\"\"\ntype documents_aggregate {\n  aggregate: documents_aggregate_fields\n  nodes: [documents!]!\n}\n\n\"\"\"\naggregate fields of \"documents\"\n\"\"\"\ntype documents_aggregate_fields {\n  count(columns: [documents_select_column!], distinct: Boolean): Int!\n  max: documents_max_fields\n  min: documents_min_fields\n}\n\n\"\"\"\nBoolean expression to filter rows from the table \"documents\". All fields are combined with a logical 'AND'.\n\"\"\"\ninput documents_bool_exp {\n  _and: [documents_bool_exp!]\n  _not: documents_bool_exp\n  _or: [documents_bool_exp!]\n  created_at: timestamptz_comparison_exp\n  id: uuid_comparison_exp\n  name: String_comparison_exp\n  page_documents: page_document_bool_exp\n  post_documents: post_document_bool_exp\n  tus_id: String_comparison_exp\n  type: String_comparison_exp\n  updated_at: timestamptz_comparison_exp\n}\n\n\"\"\"\nunique or primary key constraints on table \"documents\"\n\"\"\"\nenum documents_constraint {\n  \"\"\"unique or primary key constraint\"\"\"\n  documents_pkey\n}\n\n\"\"\"\ninput type for inserting data into table \"documents\"\n\"\"\"\ninput documents_insert_input {\n  created_at: timestamptz\n  id: uuid\n  name: String\n  page_documents: page_document_arr_rel_insert_input\n  post_documents: post_document_arr_rel_insert_input\n  tus_id: String\n  type: String\n  updated_at: timestamptz\n}\n\n\"\"\"aggregate max on columns\"\"\"\ntype documents_max_fields {\n  created_at: timestamptz\n  id: uuid\n  name: String\n  tus_id: String\n  type: String\n  updated_at: timestamptz\n}\n\n\"\"\"aggregate min on columns\"\"\"\ntype documents_min_fields {\n  created_at: timestamptz\n  id: uuid\n  name: String\n  tus_id: String\n  type: String\n  updated_at: timestamptz\n}\n\n\"\"\"\nresponse of any mutation on the table \"documents\"\n\"\"\"\ntype documents_mutation_response {\n  \"\"\"number of rows affected by the mutation\"\"\"\n  affected_rows: Int!\n\n  \"\"\"data from the rows affected by the mutation\"\"\"\n  returning: [documents!]!\n}\n\n\"\"\"\ninput type for inserting object relation for remote table \"documents\"\n\"\"\"\ninput documents_obj_rel_insert_input {\n  data: documents_insert_input!\n\n  \"\"\"upsert condition\"\"\"\n  on_conflict: documents_on_conflict\n}\n\n\"\"\"\non_conflict condition type for table \"documents\"\n\"\"\"\ninput documents_on_conflict {\n  constraint: documents_constraint!\n  update_columns: [documents_update_column!]! = []\n  where: documents_bool_exp\n}\n\n\"\"\"Ordering options when selecting data from \"documents\".\"\"\"\ninput documents_order_by {\n  created_at: order_by\n  id: order_by\n  name: order_by\n  page_documents_aggregate: page_document_aggregate_order_by\n  post_documents_aggregate: post_document_aggregate_order_by\n  tus_id: order_by\n  type: order_by\n  updated_at: order_by\n}\n\n\"\"\"primary key columns input for table: documents\"\"\"\ninput documents_pk_columns_input {\n  id: uuid!\n}\n\n\"\"\"\nselect columns of table \"documents\"\n\"\"\"\nenum documents_select_column {\n  \"\"\"column name\"\"\"\n  created_at\n\n  \"\"\"column name\"\"\"\n  id\n\n  \"\"\"column name\"\"\"\n  name\n\n  \"\"\"column name\"\"\"\n  tus_id\n\n  \"\"\"column name\"\"\"\n  type\n\n  \"\"\"column name\"\"\"\n  updated_at\n}\n\n\"\"\"\ninput type for updating data in table \"documents\"\n\"\"\"\ninput documents_set_input {\n  created_at: timestamptz\n  id: uuid\n  name: String\n  tus_id: String\n  type: String\n  updated_at: timestamptz\n}\n\n\"\"\"\nupdate columns of table \"documents\"\n\"\"\"\nenum documents_update_column {\n  \"\"\"column name\"\"\"\n  created_at\n\n  \"\"\"column name\"\"\"\n  id\n\n  \"\"\"column name\"\"\"\n  name\n\n  \"\"\"column name\"\"\"\n  tus_id\n\n  \"\"\"column name\"\"\"\n  type\n\n  \"\"\"column name\"\"\"\n  updated_at\n}\n\n\"\"\"\ncolumns and relationships of \"events\"\n\"\"\"\ntype events {\n  created_at: timestamptz!\n  date_end: date!\n  date_start: date!\n  id: uuid!\n  name: String!\n  organization: String\n  organization_url: String\n  updated_at: timestamptz!\n  url: String\n}\n\n\"\"\"\naggregated selection of \"events\"\n\"\"\"\ntype events_aggregate {\n  aggregate: events_aggregate_fields\n  nodes: [events!]!\n}\n\n\"\"\"\naggregate fields of \"events\"\n\"\"\"\ntype events_aggregate_fields {\n  count(columns: [events_select_column!], distinct: Boolean): Int!\n  max: events_max_fields\n  min: events_min_fields\n}\n\n\"\"\"\nBoolean expression to filter rows from the table \"events\". All fields are combined with a logical 'AND'.\n\"\"\"\ninput events_bool_exp {\n  _and: [events_bool_exp!]\n  _not: events_bool_exp\n  _or: [events_bool_exp!]\n  created_at: timestamptz_comparison_exp\n  date_end: date_comparison_exp\n  date_start: date_comparison_exp\n  id: uuid_comparison_exp\n  name: String_comparison_exp\n  organization: String_comparison_exp\n  organization_url: String_comparison_exp\n  updated_at: timestamptz_comparison_exp\n  url: String_comparison_exp\n}\n\n\"\"\"\nunique or primary key constraints on table \"events\"\n\"\"\"\nenum events_constraint {\n  \"\"\"unique or primary key constraint\"\"\"\n  events_pkey\n}\n\n\"\"\"\ninput type for inserting data into table \"events\"\n\"\"\"\ninput events_insert_input {\n  created_at: timestamptz\n  date_end: date\n  date_start: date\n  id: uuid\n  name: String\n  organization: String\n  organization_url: String\n  updated_at: timestamptz\n  url: String\n}\n\n\"\"\"aggregate max on columns\"\"\"\ntype events_max_fields {\n  created_at: timestamptz\n  date_end: date\n  date_start: date\n  id: uuid\n  name: String\n  organization: String\n  organization_url: String\n  updated_at: timestamptz\n  url: String\n}\n\n\"\"\"aggregate min on columns\"\"\"\ntype events_min_fields {\n  created_at: timestamptz\n  date_end: date\n  date_start: date\n  id: uuid\n  name: String\n  organization: String\n  organization_url: String\n  updated_at: timestamptz\n  url: String\n}\n\n\"\"\"\nresponse of any mutation on the table \"events\"\n\"\"\"\ntype events_mutation_response {\n  \"\"\"number of rows affected by the mutation\"\"\"\n  affected_rows: Int!\n\n  \"\"\"data from the rows affected by the mutation\"\"\"\n  returning: [events!]!\n}\n\n\"\"\"\non_conflict condition type for table \"events\"\n\"\"\"\ninput events_on_conflict {\n  constraint: events_constraint!\n  update_columns: [events_update_column!]! = []\n  where: events_bool_exp\n}\n\n\"\"\"Ordering options when selecting data from \"events\".\"\"\"\ninput events_order_by {\n  created_at: order_by\n  date_end: order_by\n  date_start: order_by\n  id: order_by\n  name: order_by\n  organization: order_by\n  organization_url: order_by\n  updated_at: order_by\n  url: order_by\n}\n\n\"\"\"primary key columns input for table: events\"\"\"\ninput events_pk_columns_input {\n  id: uuid!\n}\n\n\"\"\"\nselect columns of table \"events\"\n\"\"\"\nenum events_select_column {\n  \"\"\"column name\"\"\"\n  created_at\n\n  \"\"\"column name\"\"\"\n  date_end\n\n  \"\"\"column name\"\"\"\n  date_start\n\n  \"\"\"column name\"\"\"\n  id\n\n  \"\"\"column name\"\"\"\n  name\n\n  \"\"\"column name\"\"\"\n  organization\n\n  \"\"\"column name\"\"\"\n  organization_url\n\n  \"\"\"column name\"\"\"\n  updated_at\n\n  \"\"\"column name\"\"\"\n  url\n}\n\n\"\"\"\ninput type for updating data in table \"events\"\n\"\"\"\ninput events_set_input {\n  created_at: timestamptz\n  date_end: date\n  date_start: date\n  id: uuid\n  name: String\n  organization: String\n  organization_url: String\n  updated_at: timestamptz\n  url: String\n}\n\n\"\"\"\nupdate columns of table \"events\"\n\"\"\"\nenum events_update_column {\n  \"\"\"column name\"\"\"\n  created_at\n\n  \"\"\"column name\"\"\"\n  date_end\n\n  \"\"\"column name\"\"\"\n  date_start\n\n  \"\"\"column name\"\"\"\n  id\n\n  \"\"\"column name\"\"\"\n  name\n\n  \"\"\"column name\"\"\"\n  organization\n\n  \"\"\"column name\"\"\"\n  organization_url\n\n  \"\"\"column name\"\"\"\n  updated_at\n\n  \"\"\"column name\"\"\"\n  url\n}\n\nscalar jsonb\n\n\"\"\"\nBoolean expression to compare columns of type \"jsonb\". All fields are combined with logical 'AND'.\n\"\"\"\ninput jsonb_comparison_exp {\n  \"\"\"is the column contained in the given json value\"\"\"\n  _contained_in: jsonb\n\n  \"\"\"does the column contain the given json value at the top level\"\"\"\n  _contains: jsonb\n  _eq: jsonb\n  _gt: jsonb\n  _gte: jsonb\n\n  \"\"\"does the string exist as a top-level key in the column\"\"\"\n  _has_key: String\n\n  \"\"\"do all of these strings exist as top-level keys in the column\"\"\"\n  _has_keys_all: [String!]\n\n  \"\"\"do any of these strings exist as top-level keys in the column\"\"\"\n  _has_keys_any: [String!]\n  _in: [jsonb!]\n  _is_null: Boolean\n  _lt: jsonb\n  _lte: jsonb\n  _neq: jsonb\n  _nin: [jsonb!]\n}\n\n\"\"\"\ncolumns and relationships of \"links\"\n\"\"\"\ntype links {\n  created_at: timestamptz!\n  id: uuid!\n  label: String!\n\n  \"\"\"An array relationship\"\"\"\n  page_links(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [page_link_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [page_link_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: page_link_bool_exp\n  ): [page_link!]!\n\n  \"\"\"An aggregate relationship\"\"\"\n  page_links_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [page_link_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [page_link_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: page_link_bool_exp\n  ): page_link_aggregate!\n\n  \"\"\"An array relationship\"\"\"\n  post_links(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [post_link_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [post_link_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: post_link_bool_exp\n  ): [post_link!]!\n\n  \"\"\"An aggregate relationship\"\"\"\n  post_links_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [post_link_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [post_link_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: post_link_bool_exp\n  ): post_link_aggregate!\n  updated_at: timestamptz!\n  url: String!\n}\n\n\"\"\"\naggregated selection of \"links\"\n\"\"\"\ntype links_aggregate {\n  aggregate: links_aggregate_fields\n  nodes: [links!]!\n}\n\n\"\"\"\naggregate fields of \"links\"\n\"\"\"\ntype links_aggregate_fields {\n  count(columns: [links_select_column!], distinct: Boolean): Int!\n  max: links_max_fields\n  min: links_min_fields\n}\n\n\"\"\"\nBoolean expression to filter rows from the table \"links\". All fields are combined with a logical 'AND'.\n\"\"\"\ninput links_bool_exp {\n  _and: [links_bool_exp!]\n  _not: links_bool_exp\n  _or: [links_bool_exp!]\n  created_at: timestamptz_comparison_exp\n  id: uuid_comparison_exp\n  label: String_comparison_exp\n  page_links: page_link_bool_exp\n  post_links: post_link_bool_exp\n  updated_at: timestamptz_comparison_exp\n  url: String_comparison_exp\n}\n\n\"\"\"\nunique or primary key constraints on table \"links\"\n\"\"\"\nenum links_constraint {\n  \"\"\"unique or primary key constraint\"\"\"\n  links_pkey\n}\n\n\"\"\"\ninput type for inserting data into table \"links\"\n\"\"\"\ninput links_insert_input {\n  created_at: timestamptz\n  id: uuid\n  label: String\n  page_links: page_link_arr_rel_insert_input\n  post_links: post_link_arr_rel_insert_input\n  updated_at: timestamptz\n  url: String\n}\n\n\"\"\"aggregate max on columns\"\"\"\ntype links_max_fields {\n  created_at: timestamptz\n  id: uuid\n  label: String\n  updated_at: timestamptz\n  url: String\n}\n\n\"\"\"aggregate min on columns\"\"\"\ntype links_min_fields {\n  created_at: timestamptz\n  id: uuid\n  label: String\n  updated_at: timestamptz\n  url: String\n}\n\n\"\"\"\nresponse of any mutation on the table \"links\"\n\"\"\"\ntype links_mutation_response {\n  \"\"\"number of rows affected by the mutation\"\"\"\n  affected_rows: Int!\n\n  \"\"\"data from the rows affected by the mutation\"\"\"\n  returning: [links!]!\n}\n\n\"\"\"\ninput type for inserting object relation for remote table \"links\"\n\"\"\"\ninput links_obj_rel_insert_input {\n  data: links_insert_input!\n\n  \"\"\"upsert condition\"\"\"\n  on_conflict: links_on_conflict\n}\n\n\"\"\"\non_conflict condition type for table \"links\"\n\"\"\"\ninput links_on_conflict {\n  constraint: links_constraint!\n  update_columns: [links_update_column!]! = []\n  where: links_bool_exp\n}\n\n\"\"\"Ordering options when selecting data from \"links\".\"\"\"\ninput links_order_by {\n  created_at: order_by\n  id: order_by\n  label: order_by\n  page_links_aggregate: page_link_aggregate_order_by\n  post_links_aggregate: post_link_aggregate_order_by\n  updated_at: order_by\n  url: order_by\n}\n\n\"\"\"primary key columns input for table: links\"\"\"\ninput links_pk_columns_input {\n  id: uuid!\n}\n\n\"\"\"\nselect columns of table \"links\"\n\"\"\"\nenum links_select_column {\n  \"\"\"column name\"\"\"\n  created_at\n\n  \"\"\"column name\"\"\"\n  id\n\n  \"\"\"column name\"\"\"\n  label\n\n  \"\"\"column name\"\"\"\n  updated_at\n\n  \"\"\"column name\"\"\"\n  url\n}\n\n\"\"\"\ninput type for updating data in table \"links\"\n\"\"\"\ninput links_set_input {\n  created_at: timestamptz\n  id: uuid\n  label: String\n  updated_at: timestamptz\n  url: String\n}\n\n\"\"\"\nupdate columns of table \"links\"\n\"\"\"\nenum links_update_column {\n  \"\"\"column name\"\"\"\n  created_at\n\n  \"\"\"column name\"\"\"\n  id\n\n  \"\"\"column name\"\"\"\n  label\n\n  \"\"\"column name\"\"\"\n  updated_at\n\n  \"\"\"column name\"\"\"\n  url\n}\n\n\"\"\"mutation root\"\"\"\ntype mutation_root {\n  \"\"\"\n  delete data from the table: \"categories\"\n  \"\"\"\n  delete_categories(\n    \"\"\"filter the rows which have to be deleted\"\"\"\n    where: categories_bool_exp!\n  ): categories_mutation_response\n\n  \"\"\"\n  delete single row from the table: \"categories\"\n  \"\"\"\n  delete_categories_by_pk(id: uuid!): categories\n\n  \"\"\"\n  delete data from the table: \"documents\"\n  \"\"\"\n  delete_documents(\n    \"\"\"filter the rows which have to be deleted\"\"\"\n    where: documents_bool_exp!\n  ): documents_mutation_response\n\n  \"\"\"\n  delete single row from the table: \"documents\"\n  \"\"\"\n  delete_documents_by_pk(id: uuid!): documents\n\n  \"\"\"\n  delete data from the table: \"events\"\n  \"\"\"\n  delete_events(\n    \"\"\"filter the rows which have to be deleted\"\"\"\n    where: events_bool_exp!\n  ): events_mutation_response\n\n  \"\"\"\n  delete single row from the table: \"events\"\n  \"\"\"\n  delete_events_by_pk(id: uuid!): events\n\n  \"\"\"\n  delete data from the table: \"links\"\n  \"\"\"\n  delete_links(\n    \"\"\"filter the rows which have to be deleted\"\"\"\n    where: links_bool_exp!\n  ): links_mutation_response\n\n  \"\"\"\n  delete single row from the table: \"links\"\n  \"\"\"\n  delete_links_by_pk(id: uuid!): links\n\n  \"\"\"\n  delete data from the table: \"page_categorie\"\n  \"\"\"\n  delete_page_categorie(\n    \"\"\"filter the rows which have to be deleted\"\"\"\n    where: page_categorie_bool_exp!\n  ): page_categorie_mutation_response\n\n  \"\"\"\n  delete single row from the table: \"page_categorie\"\n  \"\"\"\n  delete_page_categorie_by_pk(id: Int!): page_categorie\n\n  \"\"\"\n  delete data from the table: \"page_document\"\n  \"\"\"\n  delete_page_document(\n    \"\"\"filter the rows which have to be deleted\"\"\"\n    where: page_document_bool_exp!\n  ): page_document_mutation_response\n\n  \"\"\"\n  delete single row from the table: \"page_document\"\n  \"\"\"\n  delete_page_document_by_pk(id: uuid!): page_document\n\n  \"\"\"\n  delete data from the table: \"page_link\"\n  \"\"\"\n  delete_page_link(\n    \"\"\"filter the rows which have to be deleted\"\"\"\n    where: page_link_bool_exp!\n  ): page_link_mutation_response\n\n  \"\"\"\n  delete single row from the table: \"page_link\"\n  \"\"\"\n  delete_page_link_by_pk(id: uuid!): page_link\n\n  \"\"\"\n  delete data from the table: \"pages\"\n  \"\"\"\n  delete_pages(\n    \"\"\"filter the rows which have to be deleted\"\"\"\n    where: pages_bool_exp!\n  ): pages_mutation_response\n\n  \"\"\"\n  delete single row from the table: \"pages\"\n  \"\"\"\n  delete_pages_by_pk(id: uuid!): pages\n\n  \"\"\"\n  delete data from the table: \"post_document\"\n  \"\"\"\n  delete_post_document(\n    \"\"\"filter the rows which have to be deleted\"\"\"\n    where: post_document_bool_exp!\n  ): post_document_mutation_response\n\n  \"\"\"\n  delete single row from the table: \"post_document\"\n  \"\"\"\n  delete_post_document_by_pk(id: uuid!): post_document\n\n  \"\"\"\n  delete data from the table: \"post_link\"\n  \"\"\"\n  delete_post_link(\n    \"\"\"filter the rows which have to be deleted\"\"\"\n    where: post_link_bool_exp!\n  ): post_link_mutation_response\n\n  \"\"\"\n  delete single row from the table: \"post_link\"\n  \"\"\"\n  delete_post_link_by_pk(id: uuid!): post_link\n\n  \"\"\"\n  delete data from the table: \"posts\"\n  \"\"\"\n  delete_posts(\n    \"\"\"filter the rows which have to be deleted\"\"\"\n    where: posts_bool_exp!\n  ): posts_mutation_response\n\n  \"\"\"\n  delete single row from the table: \"posts\"\n  \"\"\"\n  delete_posts_by_pk(id: uuid!): posts\n\n  \"\"\"\n  delete data from the table: \"site\"\n  \"\"\"\n  delete_site(\n    \"\"\"filter the rows which have to be deleted\"\"\"\n    where: site_bool_exp!\n  ): site_mutation_response\n\n  \"\"\"\n  delete single row from the table: \"site\"\n  \"\"\"\n  delete_site_by_pk(id: Int!): site\n\n  \"\"\"\n  insert data into the table: \"categories\"\n  \"\"\"\n  insert_categories(\n    \"\"\"the rows to be inserted\"\"\"\n    objects: [categories_insert_input!]!\n\n    \"\"\"upsert condition\"\"\"\n    on_conflict: categories_on_conflict\n  ): categories_mutation_response\n\n  \"\"\"\n  insert a single row into the table: \"categories\"\n  \"\"\"\n  insert_categories_one(\n    \"\"\"the row to be inserted\"\"\"\n    object: categories_insert_input!\n\n    \"\"\"upsert condition\"\"\"\n    on_conflict: categories_on_conflict\n  ): categories\n\n  \"\"\"\n  insert data into the table: \"documents\"\n  \"\"\"\n  insert_documents(\n    \"\"\"the rows to be inserted\"\"\"\n    objects: [documents_insert_input!]!\n\n    \"\"\"upsert condition\"\"\"\n    on_conflict: documents_on_conflict\n  ): documents_mutation_response\n\n  \"\"\"\n  insert a single row into the table: \"documents\"\n  \"\"\"\n  insert_documents_one(\n    \"\"\"the row to be inserted\"\"\"\n    object: documents_insert_input!\n\n    \"\"\"upsert condition\"\"\"\n    on_conflict: documents_on_conflict\n  ): documents\n\n  \"\"\"\n  insert data into the table: \"events\"\n  \"\"\"\n  insert_events(\n    \"\"\"the rows to be inserted\"\"\"\n    objects: [events_insert_input!]!\n\n    \"\"\"upsert condition\"\"\"\n    on_conflict: events_on_conflict\n  ): events_mutation_response\n\n  \"\"\"\n  insert a single row into the table: \"events\"\n  \"\"\"\n  insert_events_one(\n    \"\"\"the row to be inserted\"\"\"\n    object: events_insert_input!\n\n    \"\"\"upsert condition\"\"\"\n    on_conflict: events_on_conflict\n  ): events\n\n  \"\"\"\n  insert data into the table: \"links\"\n  \"\"\"\n  insert_links(\n    \"\"\"the rows to be inserted\"\"\"\n    objects: [links_insert_input!]!\n\n    \"\"\"upsert condition\"\"\"\n    on_conflict: links_on_conflict\n  ): links_mutation_response\n\n  \"\"\"\n  insert a single row into the table: \"links\"\n  \"\"\"\n  insert_links_one(\n    \"\"\"the row to be inserted\"\"\"\n    object: links_insert_input!\n\n    \"\"\"upsert condition\"\"\"\n    on_conflict: links_on_conflict\n  ): links\n\n  \"\"\"\n  insert data into the table: \"page_categorie\"\n  \"\"\"\n  insert_page_categorie(\n    \"\"\"the rows to be inserted\"\"\"\n    objects: [page_categorie_insert_input!]!\n\n    \"\"\"upsert condition\"\"\"\n    on_conflict: page_categorie_on_conflict\n  ): page_categorie_mutation_response\n\n  \"\"\"\n  insert a single row into the table: \"page_categorie\"\n  \"\"\"\n  insert_page_categorie_one(\n    \"\"\"the row to be inserted\"\"\"\n    object: page_categorie_insert_input!\n\n    \"\"\"upsert condition\"\"\"\n    on_conflict: page_categorie_on_conflict\n  ): page_categorie\n\n  \"\"\"\n  insert data into the table: \"page_document\"\n  \"\"\"\n  insert_page_document(\n    \"\"\"the rows to be inserted\"\"\"\n    objects: [page_document_insert_input!]!\n\n    \"\"\"upsert condition\"\"\"\n    on_conflict: page_document_on_conflict\n  ): page_document_mutation_response\n\n  \"\"\"\n  insert a single row into the table: \"page_document\"\n  \"\"\"\n  insert_page_document_one(\n    \"\"\"the row to be inserted\"\"\"\n    object: page_document_insert_input!\n\n    \"\"\"upsert condition\"\"\"\n    on_conflict: page_document_on_conflict\n  ): page_document\n\n  \"\"\"\n  insert data into the table: \"page_link\"\n  \"\"\"\n  insert_page_link(\n    \"\"\"the rows to be inserted\"\"\"\n    objects: [page_link_insert_input!]!\n\n    \"\"\"upsert condition\"\"\"\n    on_conflict: page_link_on_conflict\n  ): page_link_mutation_response\n\n  \"\"\"\n  insert a single row into the table: \"page_link\"\n  \"\"\"\n  insert_page_link_one(\n    \"\"\"the row to be inserted\"\"\"\n    object: page_link_insert_input!\n\n    \"\"\"upsert condition\"\"\"\n    on_conflict: page_link_on_conflict\n  ): page_link\n\n  \"\"\"\n  insert data into the table: \"pages\"\n  \"\"\"\n  insert_pages(\n    \"\"\"the rows to be inserted\"\"\"\n    objects: [pages_insert_input!]!\n\n    \"\"\"upsert condition\"\"\"\n    on_conflict: pages_on_conflict\n  ): pages_mutation_response\n\n  \"\"\"\n  insert a single row into the table: \"pages\"\n  \"\"\"\n  insert_pages_one(\n    \"\"\"the row to be inserted\"\"\"\n    object: pages_insert_input!\n\n    \"\"\"upsert condition\"\"\"\n    on_conflict: pages_on_conflict\n  ): pages\n\n  \"\"\"\n  insert data into the table: \"post_document\"\n  \"\"\"\n  insert_post_document(\n    \"\"\"the rows to be inserted\"\"\"\n    objects: [post_document_insert_input!]!\n\n    \"\"\"upsert condition\"\"\"\n    on_conflict: post_document_on_conflict\n  ): post_document_mutation_response\n\n  \"\"\"\n  insert a single row into the table: \"post_document\"\n  \"\"\"\n  insert_post_document_one(\n    \"\"\"the row to be inserted\"\"\"\n    object: post_document_insert_input!\n\n    \"\"\"upsert condition\"\"\"\n    on_conflict: post_document_on_conflict\n  ): post_document\n\n  \"\"\"\n  insert data into the table: \"post_link\"\n  \"\"\"\n  insert_post_link(\n    \"\"\"the rows to be inserted\"\"\"\n    objects: [post_link_insert_input!]!\n\n    \"\"\"upsert condition\"\"\"\n    on_conflict: post_link_on_conflict\n  ): post_link_mutation_response\n\n  \"\"\"\n  insert a single row into the table: \"post_link\"\n  \"\"\"\n  insert_post_link_one(\n    \"\"\"the row to be inserted\"\"\"\n    object: post_link_insert_input!\n\n    \"\"\"upsert condition\"\"\"\n    on_conflict: post_link_on_conflict\n  ): post_link\n\n  \"\"\"\n  insert data into the table: \"posts\"\n  \"\"\"\n  insert_posts(\n    \"\"\"the rows to be inserted\"\"\"\n    objects: [posts_insert_input!]!\n\n    \"\"\"upsert condition\"\"\"\n    on_conflict: posts_on_conflict\n  ): posts_mutation_response\n\n  \"\"\"\n  insert a single row into the table: \"posts\"\n  \"\"\"\n  insert_posts_one(\n    \"\"\"the row to be inserted\"\"\"\n    object: posts_insert_input!\n\n    \"\"\"upsert condition\"\"\"\n    on_conflict: posts_on_conflict\n  ): posts\n\n  \"\"\"\n  insert data into the table: \"site\"\n  \"\"\"\n  insert_site(\n    \"\"\"the rows to be inserted\"\"\"\n    objects: [site_insert_input!]!\n\n    \"\"\"upsert condition\"\"\"\n    on_conflict: site_on_conflict\n  ): site_mutation_response\n\n  \"\"\"\n  insert a single row into the table: \"site\"\n  \"\"\"\n  insert_site_one(\n    \"\"\"the row to be inserted\"\"\"\n    object: site_insert_input!\n\n    \"\"\"upsert condition\"\"\"\n    on_conflict: site_on_conflict\n  ): site\n\n  \"\"\"\n  update data of the table: \"categories\"\n  \"\"\"\n  update_categories(\n    \"\"\"increments the numeric columns with given value of the filtered values\"\"\"\n    _inc: categories_inc_input\n\n    \"\"\"sets the columns of the filtered rows to the given values\"\"\"\n    _set: categories_set_input\n\n    \"\"\"filter the rows which have to be updated\"\"\"\n    where: categories_bool_exp!\n  ): categories_mutation_response\n\n  \"\"\"\n  update single row of the table: \"categories\"\n  \"\"\"\n  update_categories_by_pk(\n    \"\"\"increments the numeric columns with given value of the filtered values\"\"\"\n    _inc: categories_inc_input\n\n    \"\"\"sets the columns of the filtered rows to the given values\"\"\"\n    _set: categories_set_input\n    pk_columns: categories_pk_columns_input!\n  ): categories\n\n  \"\"\"\n  update data of the table: \"documents\"\n  \"\"\"\n  update_documents(\n    \"\"\"sets the columns of the filtered rows to the given values\"\"\"\n    _set: documents_set_input\n\n    \"\"\"filter the rows which have to be updated\"\"\"\n    where: documents_bool_exp!\n  ): documents_mutation_response\n\n  \"\"\"\n  update single row of the table: \"documents\"\n  \"\"\"\n  update_documents_by_pk(\n    \"\"\"sets the columns of the filtered rows to the given values\"\"\"\n    _set: documents_set_input\n    pk_columns: documents_pk_columns_input!\n  ): documents\n\n  \"\"\"\n  update data of the table: \"events\"\n  \"\"\"\n  update_events(\n    \"\"\"sets the columns of the filtered rows to the given values\"\"\"\n    _set: events_set_input\n\n    \"\"\"filter the rows which have to be updated\"\"\"\n    where: events_bool_exp!\n  ): events_mutation_response\n\n  \"\"\"\n  update single row of the table: \"events\"\n  \"\"\"\n  update_events_by_pk(\n    \"\"\"sets the columns of the filtered rows to the given values\"\"\"\n    _set: events_set_input\n    pk_columns: events_pk_columns_input!\n  ): events\n\n  \"\"\"\n  update data of the table: \"links\"\n  \"\"\"\n  update_links(\n    \"\"\"sets the columns of the filtered rows to the given values\"\"\"\n    _set: links_set_input\n\n    \"\"\"filter the rows which have to be updated\"\"\"\n    where: links_bool_exp!\n  ): links_mutation_response\n\n  \"\"\"\n  update single row of the table: \"links\"\n  \"\"\"\n  update_links_by_pk(\n    \"\"\"sets the columns of the filtered rows to the given values\"\"\"\n    _set: links_set_input\n    pk_columns: links_pk_columns_input!\n  ): links\n\n  \"\"\"\n  update data of the table: \"page_categorie\"\n  \"\"\"\n  update_page_categorie(\n    \"\"\"increments the numeric columns with given value of the filtered values\"\"\"\n    _inc: page_categorie_inc_input\n\n    \"\"\"sets the columns of the filtered rows to the given values\"\"\"\n    _set: page_categorie_set_input\n\n    \"\"\"filter the rows which have to be updated\"\"\"\n    where: page_categorie_bool_exp!\n  ): page_categorie_mutation_response\n\n  \"\"\"\n  update single row of the table: \"page_categorie\"\n  \"\"\"\n  update_page_categorie_by_pk(\n    \"\"\"increments the numeric columns with given value of the filtered values\"\"\"\n    _inc: page_categorie_inc_input\n\n    \"\"\"sets the columns of the filtered rows to the given values\"\"\"\n    _set: page_categorie_set_input\n    pk_columns: page_categorie_pk_columns_input!\n  ): page_categorie\n\n  \"\"\"\n  update data of the table: \"page_document\"\n  \"\"\"\n  update_page_document(\n    \"\"\"sets the columns of the filtered rows to the given values\"\"\"\n    _set: page_document_set_input\n\n    \"\"\"filter the rows which have to be updated\"\"\"\n    where: page_document_bool_exp!\n  ): page_document_mutation_response\n\n  \"\"\"\n  update single row of the table: \"page_document\"\n  \"\"\"\n  update_page_document_by_pk(\n    \"\"\"sets the columns of the filtered rows to the given values\"\"\"\n    _set: page_document_set_input\n    pk_columns: page_document_pk_columns_input!\n  ): page_document\n\n  \"\"\"\n  update data of the table: \"page_link\"\n  \"\"\"\n  update_page_link(\n    \"\"\"sets the columns of the filtered rows to the given values\"\"\"\n    _set: page_link_set_input\n\n    \"\"\"filter the rows which have to be updated\"\"\"\n    where: page_link_bool_exp!\n  ): page_link_mutation_response\n\n  \"\"\"\n  update single row of the table: \"page_link\"\n  \"\"\"\n  update_page_link_by_pk(\n    \"\"\"sets the columns of the filtered rows to the given values\"\"\"\n    _set: page_link_set_input\n    pk_columns: page_link_pk_columns_input!\n  ): page_link\n\n  \"\"\"\n  update data of the table: \"pages\"\n  \"\"\"\n  update_pages(\n    \"\"\"append existing jsonb value of filtered columns with new jsonb value\"\"\"\n    _append: pages_append_input\n\n    \"\"\"\n    delete the field or element with specified path (for JSON arrays, negative integers count from the end)\n    \"\"\"\n    _delete_at_path: pages_delete_at_path_input\n\n    \"\"\"\n    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array\n    \"\"\"\n    _delete_elem: pages_delete_elem_input\n\n    \"\"\"\n    delete key/value pair or string element. key/value pairs are matched based on their key value\n    \"\"\"\n    _delete_key: pages_delete_key_input\n\n    \"\"\"increments the numeric columns with given value of the filtered values\"\"\"\n    _inc: pages_inc_input\n\n    \"\"\"prepend existing jsonb value of filtered columns with new jsonb value\"\"\"\n    _prepend: pages_prepend_input\n\n    \"\"\"sets the columns of the filtered rows to the given values\"\"\"\n    _set: pages_set_input\n\n    \"\"\"filter the rows which have to be updated\"\"\"\n    where: pages_bool_exp!\n  ): pages_mutation_response\n\n  \"\"\"\n  update single row of the table: \"pages\"\n  \"\"\"\n  update_pages_by_pk(\n    \"\"\"append existing jsonb value of filtered columns with new jsonb value\"\"\"\n    _append: pages_append_input\n\n    \"\"\"\n    delete the field or element with specified path (for JSON arrays, negative integers count from the end)\n    \"\"\"\n    _delete_at_path: pages_delete_at_path_input\n\n    \"\"\"\n    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array\n    \"\"\"\n    _delete_elem: pages_delete_elem_input\n\n    \"\"\"\n    delete key/value pair or string element. key/value pairs are matched based on their key value\n    \"\"\"\n    _delete_key: pages_delete_key_input\n\n    \"\"\"increments the numeric columns with given value of the filtered values\"\"\"\n    _inc: pages_inc_input\n\n    \"\"\"prepend existing jsonb value of filtered columns with new jsonb value\"\"\"\n    _prepend: pages_prepend_input\n\n    \"\"\"sets the columns of the filtered rows to the given values\"\"\"\n    _set: pages_set_input\n    pk_columns: pages_pk_columns_input!\n  ): pages\n\n  \"\"\"\n  update data of the table: \"post_document\"\n  \"\"\"\n  update_post_document(\n    \"\"\"sets the columns of the filtered rows to the given values\"\"\"\n    _set: post_document_set_input\n\n    \"\"\"filter the rows which have to be updated\"\"\"\n    where: post_document_bool_exp!\n  ): post_document_mutation_response\n\n  \"\"\"\n  update single row of the table: \"post_document\"\n  \"\"\"\n  update_post_document_by_pk(\n    \"\"\"sets the columns of the filtered rows to the given values\"\"\"\n    _set: post_document_set_input\n    pk_columns: post_document_pk_columns_input!\n  ): post_document\n\n  \"\"\"\n  update data of the table: \"post_link\"\n  \"\"\"\n  update_post_link(\n    \"\"\"sets the columns of the filtered rows to the given values\"\"\"\n    _set: post_link_set_input\n\n    \"\"\"filter the rows which have to be updated\"\"\"\n    where: post_link_bool_exp!\n  ): post_link_mutation_response\n\n  \"\"\"\n  update single row of the table: \"post_link\"\n  \"\"\"\n  update_post_link_by_pk(\n    \"\"\"sets the columns of the filtered rows to the given values\"\"\"\n    _set: post_link_set_input\n    pk_columns: post_link_pk_columns_input!\n  ): post_link\n\n  \"\"\"\n  update data of the table: \"posts\"\n  \"\"\"\n  update_posts(\n    \"\"\"sets the columns of the filtered rows to the given values\"\"\"\n    _set: posts_set_input\n\n    \"\"\"filter the rows which have to be updated\"\"\"\n    where: posts_bool_exp!\n  ): posts_mutation_response\n\n  \"\"\"\n  update single row of the table: \"posts\"\n  \"\"\"\n  update_posts_by_pk(\n    \"\"\"sets the columns of the filtered rows to the given values\"\"\"\n    _set: posts_set_input\n    pk_columns: posts_pk_columns_input!\n  ): posts\n\n  \"\"\"\n  update data of the table: \"site\"\n  \"\"\"\n  update_site(\n    \"\"\"increments the numeric columns with given value of the filtered values\"\"\"\n    _inc: site_inc_input\n\n    \"\"\"sets the columns of the filtered rows to the given values\"\"\"\n    _set: site_set_input\n\n    \"\"\"filter the rows which have to be updated\"\"\"\n    where: site_bool_exp!\n  ): site_mutation_response\n\n  \"\"\"\n  update single row of the table: \"site\"\n  \"\"\"\n  update_site_by_pk(\n    \"\"\"increments the numeric columns with given value of the filtered values\"\"\"\n    _inc: site_inc_input\n\n    \"\"\"sets the columns of the filtered rows to the given values\"\"\"\n    _set: site_set_input\n    pk_columns: site_pk_columns_input!\n  ): site\n}\n\n\"\"\"column ordering options\"\"\"\nenum order_by {\n  \"\"\"in ascending order, nulls last\"\"\"\n  asc\n\n  \"\"\"in ascending order, nulls first\"\"\"\n  asc_nulls_first\n\n  \"\"\"in ascending order, nulls last\"\"\"\n  asc_nulls_last\n\n  \"\"\"in descending order, nulls first\"\"\"\n  desc\n\n  \"\"\"in descending order, nulls first\"\"\"\n  desc_nulls_first\n\n  \"\"\"in descending order, nulls last\"\"\"\n  desc_nulls_last\n}\n\n\"\"\"\ncolumns and relationships of \"page_categorie\"\n\"\"\"\ntype page_categorie {\n  categorie_id: uuid!\n\n  \"\"\"An object relationship\"\"\"\n  category: categories!\n  id: Int!\n\n  \"\"\"An object relationship\"\"\"\n  page: pages!\n  page_id: uuid!\n  position: Int\n}\n\n\"\"\"\naggregated selection of \"page_categorie\"\n\"\"\"\ntype page_categorie_aggregate {\n  aggregate: page_categorie_aggregate_fields\n  nodes: [page_categorie!]!\n}\n\n\"\"\"\naggregate fields of \"page_categorie\"\n\"\"\"\ntype page_categorie_aggregate_fields {\n  avg: page_categorie_avg_fields\n  count(columns: [page_categorie_select_column!], distinct: Boolean): Int!\n  max: page_categorie_max_fields\n  min: page_categorie_min_fields\n  stddev: page_categorie_stddev_fields\n  stddev_pop: page_categorie_stddev_pop_fields\n  stddev_samp: page_categorie_stddev_samp_fields\n  sum: page_categorie_sum_fields\n  var_pop: page_categorie_var_pop_fields\n  var_samp: page_categorie_var_samp_fields\n  variance: page_categorie_variance_fields\n}\n\n\"\"\"\norder by aggregate values of table \"page_categorie\"\n\"\"\"\ninput page_categorie_aggregate_order_by {\n  avg: page_categorie_avg_order_by\n  count: order_by\n  max: page_categorie_max_order_by\n  min: page_categorie_min_order_by\n  stddev: page_categorie_stddev_order_by\n  stddev_pop: page_categorie_stddev_pop_order_by\n  stddev_samp: page_categorie_stddev_samp_order_by\n  sum: page_categorie_sum_order_by\n  var_pop: page_categorie_var_pop_order_by\n  var_samp: page_categorie_var_samp_order_by\n  variance: page_categorie_variance_order_by\n}\n\n\"\"\"\ninput type for inserting array relation for remote table \"page_categorie\"\n\"\"\"\ninput page_categorie_arr_rel_insert_input {\n  data: [page_categorie_insert_input!]!\n\n  \"\"\"upsert condition\"\"\"\n  on_conflict: page_categorie_on_conflict\n}\n\n\"\"\"aggregate avg on columns\"\"\"\ntype page_categorie_avg_fields {\n  id: Float\n  position: Float\n}\n\n\"\"\"\norder by avg() on columns of table \"page_categorie\"\n\"\"\"\ninput page_categorie_avg_order_by {\n  id: order_by\n  position: order_by\n}\n\n\"\"\"\nBoolean expression to filter rows from the table \"page_categorie\". All fields are combined with a logical 'AND'.\n\"\"\"\ninput page_categorie_bool_exp {\n  _and: [page_categorie_bool_exp!]\n  _not: page_categorie_bool_exp\n  _or: [page_categorie_bool_exp!]\n  categorie_id: uuid_comparison_exp\n  category: categories_bool_exp\n  id: Int_comparison_exp\n  page: pages_bool_exp\n  page_id: uuid_comparison_exp\n  position: Int_comparison_exp\n}\n\n\"\"\"\nunique or primary key constraints on table \"page_categorie\"\n\"\"\"\nenum page_categorie_constraint {\n  \"\"\"unique or primary key constraint\"\"\"\n  page_categorie_pkey\n}\n\n\"\"\"\ninput type for incrementing numeric columns in table \"page_categorie\"\n\"\"\"\ninput page_categorie_inc_input {\n  id: Int\n  position: Int\n}\n\n\"\"\"\ninput type for inserting data into table \"page_categorie\"\n\"\"\"\ninput page_categorie_insert_input {\n  categorie_id: uuid\n  category: categories_obj_rel_insert_input\n  id: Int\n  page: pages_obj_rel_insert_input\n  page_id: uuid\n  position: Int\n}\n\n\"\"\"aggregate max on columns\"\"\"\ntype page_categorie_max_fields {\n  categorie_id: uuid\n  id: Int\n  page_id: uuid\n  position: Int\n}\n\n\"\"\"\norder by max() on columns of table \"page_categorie\"\n\"\"\"\ninput page_categorie_max_order_by {\n  categorie_id: order_by\n  id: order_by\n  page_id: order_by\n  position: order_by\n}\n\n\"\"\"aggregate min on columns\"\"\"\ntype page_categorie_min_fields {\n  categorie_id: uuid\n  id: Int\n  page_id: uuid\n  position: Int\n}\n\n\"\"\"\norder by min() on columns of table \"page_categorie\"\n\"\"\"\ninput page_categorie_min_order_by {\n  categorie_id: order_by\n  id: order_by\n  page_id: order_by\n  position: order_by\n}\n\n\"\"\"\nresponse of any mutation on the table \"page_categorie\"\n\"\"\"\ntype page_categorie_mutation_response {\n  \"\"\"number of rows affected by the mutation\"\"\"\n  affected_rows: Int!\n\n  \"\"\"data from the rows affected by the mutation\"\"\"\n  returning: [page_categorie!]!\n}\n\n\"\"\"\non_conflict condition type for table \"page_categorie\"\n\"\"\"\ninput page_categorie_on_conflict {\n  constraint: page_categorie_constraint!\n  update_columns: [page_categorie_update_column!]! = []\n  where: page_categorie_bool_exp\n}\n\n\"\"\"Ordering options when selecting data from \"page_categorie\".\"\"\"\ninput page_categorie_order_by {\n  categorie_id: order_by\n  category: categories_order_by\n  id: order_by\n  page: pages_order_by\n  page_id: order_by\n  position: order_by\n}\n\n\"\"\"primary key columns input for table: page_categorie\"\"\"\ninput page_categorie_pk_columns_input {\n  id: Int!\n}\n\n\"\"\"\nselect columns of table \"page_categorie\"\n\"\"\"\nenum page_categorie_select_column {\n  \"\"\"column name\"\"\"\n  categorie_id\n\n  \"\"\"column name\"\"\"\n  id\n\n  \"\"\"column name\"\"\"\n  page_id\n\n  \"\"\"column name\"\"\"\n  position\n}\n\n\"\"\"\ninput type for updating data in table \"page_categorie\"\n\"\"\"\ninput page_categorie_set_input {\n  categorie_id: uuid\n  id: Int\n  page_id: uuid\n  position: Int\n}\n\n\"\"\"aggregate stddev on columns\"\"\"\ntype page_categorie_stddev_fields {\n  id: Float\n  position: Float\n}\n\n\"\"\"\norder by stddev() on columns of table \"page_categorie\"\n\"\"\"\ninput page_categorie_stddev_order_by {\n  id: order_by\n  position: order_by\n}\n\n\"\"\"aggregate stddev_pop on columns\"\"\"\ntype page_categorie_stddev_pop_fields {\n  id: Float\n  position: Float\n}\n\n\"\"\"\norder by stddev_pop() on columns of table \"page_categorie\"\n\"\"\"\ninput page_categorie_stddev_pop_order_by {\n  id: order_by\n  position: order_by\n}\n\n\"\"\"aggregate stddev_samp on columns\"\"\"\ntype page_categorie_stddev_samp_fields {\n  id: Float\n  position: Float\n}\n\n\"\"\"\norder by stddev_samp() on columns of table \"page_categorie\"\n\"\"\"\ninput page_categorie_stddev_samp_order_by {\n  id: order_by\n  position: order_by\n}\n\n\"\"\"aggregate sum on columns\"\"\"\ntype page_categorie_sum_fields {\n  id: Int\n  position: Int\n}\n\n\"\"\"\norder by sum() on columns of table \"page_categorie\"\n\"\"\"\ninput page_categorie_sum_order_by {\n  id: order_by\n  position: order_by\n}\n\n\"\"\"\nupdate columns of table \"page_categorie\"\n\"\"\"\nenum page_categorie_update_column {\n  \"\"\"column name\"\"\"\n  categorie_id\n\n  \"\"\"column name\"\"\"\n  id\n\n  \"\"\"column name\"\"\"\n  page_id\n\n  \"\"\"column name\"\"\"\n  position\n}\n\n\"\"\"aggregate var_pop on columns\"\"\"\ntype page_categorie_var_pop_fields {\n  id: Float\n  position: Float\n}\n\n\"\"\"\norder by var_pop() on columns of table \"page_categorie\"\n\"\"\"\ninput page_categorie_var_pop_order_by {\n  id: order_by\n  position: order_by\n}\n\n\"\"\"aggregate var_samp on columns\"\"\"\ntype page_categorie_var_samp_fields {\n  id: Float\n  position: Float\n}\n\n\"\"\"\norder by var_samp() on columns of table \"page_categorie\"\n\"\"\"\ninput page_categorie_var_samp_order_by {\n  id: order_by\n  position: order_by\n}\n\n\"\"\"aggregate variance on columns\"\"\"\ntype page_categorie_variance_fields {\n  id: Float\n  position: Float\n}\n\n\"\"\"\norder by variance() on columns of table \"page_categorie\"\n\"\"\"\ninput page_categorie_variance_order_by {\n  id: order_by\n  position: order_by\n}\n\n\"\"\"\ncolumns and relationships of \"page_document\"\n\"\"\"\ntype page_document {\n  added_at: timestamptz!\n\n  \"\"\"An object relationship\"\"\"\n  document: documents!\n  document_id: uuid!\n  id: uuid!\n\n  \"\"\"An object relationship\"\"\"\n  page: pages!\n  page_id: uuid!\n}\n\n\"\"\"\naggregated selection of \"page_document\"\n\"\"\"\ntype page_document_aggregate {\n  aggregate: page_document_aggregate_fields\n  nodes: [page_document!]!\n}\n\n\"\"\"\naggregate fields of \"page_document\"\n\"\"\"\ntype page_document_aggregate_fields {\n  count(columns: [page_document_select_column!], distinct: Boolean): Int!\n  max: page_document_max_fields\n  min: page_document_min_fields\n}\n\n\"\"\"\norder by aggregate values of table \"page_document\"\n\"\"\"\ninput page_document_aggregate_order_by {\n  count: order_by\n  max: page_document_max_order_by\n  min: page_document_min_order_by\n}\n\n\"\"\"\ninput type for inserting array relation for remote table \"page_document\"\n\"\"\"\ninput page_document_arr_rel_insert_input {\n  data: [page_document_insert_input!]!\n\n  \"\"\"upsert condition\"\"\"\n  on_conflict: page_document_on_conflict\n}\n\n\"\"\"\nBoolean expression to filter rows from the table \"page_document\". All fields are combined with a logical 'AND'.\n\"\"\"\ninput page_document_bool_exp {\n  _and: [page_document_bool_exp!]\n  _not: page_document_bool_exp\n  _or: [page_document_bool_exp!]\n  added_at: timestamptz_comparison_exp\n  document: documents_bool_exp\n  document_id: uuid_comparison_exp\n  id: uuid_comparison_exp\n  page: pages_bool_exp\n  page_id: uuid_comparison_exp\n}\n\n\"\"\"\nunique or primary key constraints on table \"page_document\"\n\"\"\"\nenum page_document_constraint {\n  \"\"\"unique or primary key constraint\"\"\"\n  page_document_page_id_document_id_key\n\n  \"\"\"unique or primary key constraint\"\"\"\n  page_document_pkey\n}\n\n\"\"\"\ninput type for inserting data into table \"page_document\"\n\"\"\"\ninput page_document_insert_input {\n  added_at: timestamptz\n  document: documents_obj_rel_insert_input\n  document_id: uuid\n  id: uuid\n  page: pages_obj_rel_insert_input\n  page_id: uuid\n}\n\n\"\"\"aggregate max on columns\"\"\"\ntype page_document_max_fields {\n  added_at: timestamptz\n  document_id: uuid\n  id: uuid\n  page_id: uuid\n}\n\n\"\"\"\norder by max() on columns of table \"page_document\"\n\"\"\"\ninput page_document_max_order_by {\n  added_at: order_by\n  document_id: order_by\n  id: order_by\n  page_id: order_by\n}\n\n\"\"\"aggregate min on columns\"\"\"\ntype page_document_min_fields {\n  added_at: timestamptz\n  document_id: uuid\n  id: uuid\n  page_id: uuid\n}\n\n\"\"\"\norder by min() on columns of table \"page_document\"\n\"\"\"\ninput page_document_min_order_by {\n  added_at: order_by\n  document_id: order_by\n  id: order_by\n  page_id: order_by\n}\n\n\"\"\"\nresponse of any mutation on the table \"page_document\"\n\"\"\"\ntype page_document_mutation_response {\n  \"\"\"number of rows affected by the mutation\"\"\"\n  affected_rows: Int!\n\n  \"\"\"data from the rows affected by the mutation\"\"\"\n  returning: [page_document!]!\n}\n\n\"\"\"\non_conflict condition type for table \"page_document\"\n\"\"\"\ninput page_document_on_conflict {\n  constraint: page_document_constraint!\n  update_columns: [page_document_update_column!]! = []\n  where: page_document_bool_exp\n}\n\n\"\"\"Ordering options when selecting data from \"page_document\".\"\"\"\ninput page_document_order_by {\n  added_at: order_by\n  document: documents_order_by\n  document_id: order_by\n  id: order_by\n  page: pages_order_by\n  page_id: order_by\n}\n\n\"\"\"primary key columns input for table: page_document\"\"\"\ninput page_document_pk_columns_input {\n  id: uuid!\n}\n\n\"\"\"\nselect columns of table \"page_document\"\n\"\"\"\nenum page_document_select_column {\n  \"\"\"column name\"\"\"\n  added_at\n\n  \"\"\"column name\"\"\"\n  document_id\n\n  \"\"\"column name\"\"\"\n  id\n\n  \"\"\"column name\"\"\"\n  page_id\n}\n\n\"\"\"\ninput type for updating data in table \"page_document\"\n\"\"\"\ninput page_document_set_input {\n  added_at: timestamptz\n  document_id: uuid\n  id: uuid\n  page_id: uuid\n}\n\n\"\"\"\nupdate columns of table \"page_document\"\n\"\"\"\nenum page_document_update_column {\n  \"\"\"column name\"\"\"\n  added_at\n\n  \"\"\"column name\"\"\"\n  document_id\n\n  \"\"\"column name\"\"\"\n  id\n\n  \"\"\"column name\"\"\"\n  page_id\n}\n\n\"\"\"\ncolumns and relationships of \"page_link\"\n\"\"\"\ntype page_link {\n  added_at: timestamptz!\n  id: uuid!\n\n  \"\"\"An object relationship\"\"\"\n  link: links!\n  link_id: uuid!\n\n  \"\"\"An object relationship\"\"\"\n  page: pages!\n  page_id: uuid!\n}\n\n\"\"\"\naggregated selection of \"page_link\"\n\"\"\"\ntype page_link_aggregate {\n  aggregate: page_link_aggregate_fields\n  nodes: [page_link!]!\n}\n\n\"\"\"\naggregate fields of \"page_link\"\n\"\"\"\ntype page_link_aggregate_fields {\n  count(columns: [page_link_select_column!], distinct: Boolean): Int!\n  max: page_link_max_fields\n  min: page_link_min_fields\n}\n\n\"\"\"\norder by aggregate values of table \"page_link\"\n\"\"\"\ninput page_link_aggregate_order_by {\n  count: order_by\n  max: page_link_max_order_by\n  min: page_link_min_order_by\n}\n\n\"\"\"\ninput type for inserting array relation for remote table \"page_link\"\n\"\"\"\ninput page_link_arr_rel_insert_input {\n  data: [page_link_insert_input!]!\n\n  \"\"\"upsert condition\"\"\"\n  on_conflict: page_link_on_conflict\n}\n\n\"\"\"\nBoolean expression to filter rows from the table \"page_link\". All fields are combined with a logical 'AND'.\n\"\"\"\ninput page_link_bool_exp {\n  _and: [page_link_bool_exp!]\n  _not: page_link_bool_exp\n  _or: [page_link_bool_exp!]\n  added_at: timestamptz_comparison_exp\n  id: uuid_comparison_exp\n  link: links_bool_exp\n  link_id: uuid_comparison_exp\n  page: pages_bool_exp\n  page_id: uuid_comparison_exp\n}\n\n\"\"\"\nunique or primary key constraints on table \"page_link\"\n\"\"\"\nenum page_link_constraint {\n  \"\"\"unique or primary key constraint\"\"\"\n  page_link_page_id_link_id_key\n\n  \"\"\"unique or primary key constraint\"\"\"\n  page_link_pkey\n}\n\n\"\"\"\ninput type for inserting data into table \"page_link\"\n\"\"\"\ninput page_link_insert_input {\n  added_at: timestamptz\n  id: uuid\n  link: links_obj_rel_insert_input\n  link_id: uuid\n  page: pages_obj_rel_insert_input\n  page_id: uuid\n}\n\n\"\"\"aggregate max on columns\"\"\"\ntype page_link_max_fields {\n  added_at: timestamptz\n  id: uuid\n  link_id: uuid\n  page_id: uuid\n}\n\n\"\"\"\norder by max() on columns of table \"page_link\"\n\"\"\"\ninput page_link_max_order_by {\n  added_at: order_by\n  id: order_by\n  link_id: order_by\n  page_id: order_by\n}\n\n\"\"\"aggregate min on columns\"\"\"\ntype page_link_min_fields {\n  added_at: timestamptz\n  id: uuid\n  link_id: uuid\n  page_id: uuid\n}\n\n\"\"\"\norder by min() on columns of table \"page_link\"\n\"\"\"\ninput page_link_min_order_by {\n  added_at: order_by\n  id: order_by\n  link_id: order_by\n  page_id: order_by\n}\n\n\"\"\"\nresponse of any mutation on the table \"page_link\"\n\"\"\"\ntype page_link_mutation_response {\n  \"\"\"number of rows affected by the mutation\"\"\"\n  affected_rows: Int!\n\n  \"\"\"data from the rows affected by the mutation\"\"\"\n  returning: [page_link!]!\n}\n\n\"\"\"\non_conflict condition type for table \"page_link\"\n\"\"\"\ninput page_link_on_conflict {\n  constraint: page_link_constraint!\n  update_columns: [page_link_update_column!]! = []\n  where: page_link_bool_exp\n}\n\n\"\"\"Ordering options when selecting data from \"page_link\".\"\"\"\ninput page_link_order_by {\n  added_at: order_by\n  id: order_by\n  link: links_order_by\n  link_id: order_by\n  page: pages_order_by\n  page_id: order_by\n}\n\n\"\"\"primary key columns input for table: page_link\"\"\"\ninput page_link_pk_columns_input {\n  id: uuid!\n}\n\n\"\"\"\nselect columns of table \"page_link\"\n\"\"\"\nenum page_link_select_column {\n  \"\"\"column name\"\"\"\n  added_at\n\n  \"\"\"column name\"\"\"\n  id\n\n  \"\"\"column name\"\"\"\n  link_id\n\n  \"\"\"column name\"\"\"\n  page_id\n}\n\n\"\"\"\ninput type for updating data in table \"page_link\"\n\"\"\"\ninput page_link_set_input {\n  added_at: timestamptz\n  id: uuid\n  link_id: uuid\n  page_id: uuid\n}\n\n\"\"\"\nupdate columns of table \"page_link\"\n\"\"\"\nenum page_link_update_column {\n  \"\"\"column name\"\"\"\n  added_at\n\n  \"\"\"column name\"\"\"\n  id\n\n  \"\"\"column name\"\"\"\n  link_id\n\n  \"\"\"column name\"\"\"\n  page_id\n}\n\n\"\"\"\ncolumns and relationships of \"pages\"\n\"\"\"\ntype pages {\n  author: String!\n  content(\n    \"\"\"JSON select path\"\"\"\n    path: String\n  ): jsonb\n  created_at: timestamptz!\n  id: uuid!\n  image_url: String\n\n  \"\"\"An array relationship\"\"\"\n  page_categories(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [page_categorie_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [page_categorie_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: page_categorie_bool_exp\n  ): [page_categorie!]!\n\n  \"\"\"An aggregate relationship\"\"\"\n  page_categories_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [page_categorie_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [page_categorie_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: page_categorie_bool_exp\n  ): page_categorie_aggregate!\n\n  \"\"\"An array relationship\"\"\"\n  page_documents(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [page_document_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [page_document_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: page_document_bool_exp\n  ): [page_document!]!\n\n  \"\"\"An aggregate relationship\"\"\"\n  page_documents_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [page_document_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [page_document_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: page_document_bool_exp\n  ): page_document_aggregate!\n\n  \"\"\"An array relationship\"\"\"\n  page_links(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [page_link_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [page_link_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: page_link_bool_exp\n  ): [page_link!]!\n\n  \"\"\"An aggregate relationship\"\"\"\n  page_links_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [page_link_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [page_link_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: page_link_bool_exp\n  ): page_link_aggregate!\n  position: Int\n  published: Boolean!\n  title: String!\n  toc: Boolean\n  updated_at: timestamptz!\n}\n\n\"\"\"\naggregated selection of \"pages\"\n\"\"\"\ntype pages_aggregate {\n  aggregate: pages_aggregate_fields\n  nodes: [pages!]!\n}\n\n\"\"\"\naggregate fields of \"pages\"\n\"\"\"\ntype pages_aggregate_fields {\n  avg: pages_avg_fields\n  count(columns: [pages_select_column!], distinct: Boolean): Int!\n  max: pages_max_fields\n  min: pages_min_fields\n  stddev: pages_stddev_fields\n  stddev_pop: pages_stddev_pop_fields\n  stddev_samp: pages_stddev_samp_fields\n  sum: pages_sum_fields\n  var_pop: pages_var_pop_fields\n  var_samp: pages_var_samp_fields\n  variance: pages_variance_fields\n}\n\n\"\"\"append existing jsonb value of filtered columns with new jsonb value\"\"\"\ninput pages_append_input {\n  content: jsonb\n}\n\n\"\"\"aggregate avg on columns\"\"\"\ntype pages_avg_fields {\n  position: Float\n}\n\n\"\"\"\nBoolean expression to filter rows from the table \"pages\". All fields are combined with a logical 'AND'.\n\"\"\"\ninput pages_bool_exp {\n  _and: [pages_bool_exp!]\n  _not: pages_bool_exp\n  _or: [pages_bool_exp!]\n  author: String_comparison_exp\n  content: jsonb_comparison_exp\n  created_at: timestamptz_comparison_exp\n  id: uuid_comparison_exp\n  image_url: String_comparison_exp\n  page_categories: page_categorie_bool_exp\n  page_documents: page_document_bool_exp\n  page_links: page_link_bool_exp\n  position: Int_comparison_exp\n  published: Boolean_comparison_exp\n  title: String_comparison_exp\n  toc: Boolean_comparison_exp\n  updated_at: timestamptz_comparison_exp\n}\n\n\"\"\"\nunique or primary key constraints on table \"pages\"\n\"\"\"\nenum pages_constraint {\n  \"\"\"unique or primary key constraint\"\"\"\n  pages_pkey\n}\n\n\"\"\"\ndelete the field or element with specified path (for JSON arrays, negative integers count from the end)\n\"\"\"\ninput pages_delete_at_path_input {\n  content: [String!]\n}\n\n\"\"\"\ndelete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array\n\"\"\"\ninput pages_delete_elem_input {\n  content: Int\n}\n\n\"\"\"\ndelete key/value pair or string element. key/value pairs are matched based on their key value\n\"\"\"\ninput pages_delete_key_input {\n  content: String\n}\n\n\"\"\"\ninput type for incrementing numeric columns in table \"pages\"\n\"\"\"\ninput pages_inc_input {\n  position: Int\n}\n\n\"\"\"\ninput type for inserting data into table \"pages\"\n\"\"\"\ninput pages_insert_input {\n  author: String\n  content: jsonb\n  created_at: timestamptz\n  id: uuid\n  image_url: String\n  page_categories: page_categorie_arr_rel_insert_input\n  page_documents: page_document_arr_rel_insert_input\n  page_links: page_link_arr_rel_insert_input\n  position: Int\n  published: Boolean\n  title: String\n  toc: Boolean\n  updated_at: timestamptz\n}\n\n\"\"\"aggregate max on columns\"\"\"\ntype pages_max_fields {\n  author: String\n  created_at: timestamptz\n  id: uuid\n  image_url: String\n  position: Int\n  title: String\n  updated_at: timestamptz\n}\n\n\"\"\"aggregate min on columns\"\"\"\ntype pages_min_fields {\n  author: String\n  created_at: timestamptz\n  id: uuid\n  image_url: String\n  position: Int\n  title: String\n  updated_at: timestamptz\n}\n\n\"\"\"\nresponse of any mutation on the table \"pages\"\n\"\"\"\ntype pages_mutation_response {\n  \"\"\"number of rows affected by the mutation\"\"\"\n  affected_rows: Int!\n\n  \"\"\"data from the rows affected by the mutation\"\"\"\n  returning: [pages!]!\n}\n\n\"\"\"\ninput type for inserting object relation for remote table \"pages\"\n\"\"\"\ninput pages_obj_rel_insert_input {\n  data: pages_insert_input!\n\n  \"\"\"upsert condition\"\"\"\n  on_conflict: pages_on_conflict\n}\n\n\"\"\"\non_conflict condition type for table \"pages\"\n\"\"\"\ninput pages_on_conflict {\n  constraint: pages_constraint!\n  update_columns: [pages_update_column!]! = []\n  where: pages_bool_exp\n}\n\n\"\"\"Ordering options when selecting data from \"pages\".\"\"\"\ninput pages_order_by {\n  author: order_by\n  content: order_by\n  created_at: order_by\n  id: order_by\n  image_url: order_by\n  page_categories_aggregate: page_categorie_aggregate_order_by\n  page_documents_aggregate: page_document_aggregate_order_by\n  page_links_aggregate: page_link_aggregate_order_by\n  position: order_by\n  published: order_by\n  title: order_by\n  toc: order_by\n  updated_at: order_by\n}\n\n\"\"\"primary key columns input for table: pages\"\"\"\ninput pages_pk_columns_input {\n  id: uuid!\n}\n\n\"\"\"prepend existing jsonb value of filtered columns with new jsonb value\"\"\"\ninput pages_prepend_input {\n  content: jsonb\n}\n\n\"\"\"\nselect columns of table \"pages\"\n\"\"\"\nenum pages_select_column {\n  \"\"\"column name\"\"\"\n  author\n\n  \"\"\"column name\"\"\"\n  content\n\n  \"\"\"column name\"\"\"\n  created_at\n\n  \"\"\"column name\"\"\"\n  id\n\n  \"\"\"column name\"\"\"\n  image_url\n\n  \"\"\"column name\"\"\"\n  position\n\n  \"\"\"column name\"\"\"\n  published\n\n  \"\"\"column name\"\"\"\n  title\n\n  \"\"\"column name\"\"\"\n  toc\n\n  \"\"\"column name\"\"\"\n  updated_at\n}\n\n\"\"\"\ninput type for updating data in table \"pages\"\n\"\"\"\ninput pages_set_input {\n  author: String\n  content: jsonb\n  created_at: timestamptz\n  id: uuid\n  image_url: String\n  position: Int\n  published: Boolean\n  title: String\n  toc: Boolean\n  updated_at: timestamptz\n}\n\n\"\"\"aggregate stddev on columns\"\"\"\ntype pages_stddev_fields {\n  position: Float\n}\n\n\"\"\"aggregate stddev_pop on columns\"\"\"\ntype pages_stddev_pop_fields {\n  position: Float\n}\n\n\"\"\"aggregate stddev_samp on columns\"\"\"\ntype pages_stddev_samp_fields {\n  position: Float\n}\n\n\"\"\"aggregate sum on columns\"\"\"\ntype pages_sum_fields {\n  position: Int\n}\n\n\"\"\"\nupdate columns of table \"pages\"\n\"\"\"\nenum pages_update_column {\n  \"\"\"column name\"\"\"\n  author\n\n  \"\"\"column name\"\"\"\n  content\n\n  \"\"\"column name\"\"\"\n  created_at\n\n  \"\"\"column name\"\"\"\n  id\n\n  \"\"\"column name\"\"\"\n  image_url\n\n  \"\"\"column name\"\"\"\n  position\n\n  \"\"\"column name\"\"\"\n  published\n\n  \"\"\"column name\"\"\"\n  title\n\n  \"\"\"column name\"\"\"\n  toc\n\n  \"\"\"column name\"\"\"\n  updated_at\n}\n\n\"\"\"aggregate var_pop on columns\"\"\"\ntype pages_var_pop_fields {\n  position: Float\n}\n\n\"\"\"aggregate var_samp on columns\"\"\"\ntype pages_var_samp_fields {\n  position: Float\n}\n\n\"\"\"aggregate variance on columns\"\"\"\ntype pages_variance_fields {\n  position: Float\n}\n\n\"\"\"\ncolumns and relationships of \"post_document\"\n\"\"\"\ntype post_document {\n  added_at: timestamptz!\n\n  \"\"\"An object relationship\"\"\"\n  document: documents!\n  document_id: uuid!\n  id: uuid!\n\n  \"\"\"An object relationship\"\"\"\n  post: posts!\n  post_id: uuid!\n}\n\n\"\"\"\naggregated selection of \"post_document\"\n\"\"\"\ntype post_document_aggregate {\n  aggregate: post_document_aggregate_fields\n  nodes: [post_document!]!\n}\n\n\"\"\"\naggregate fields of \"post_document\"\n\"\"\"\ntype post_document_aggregate_fields {\n  count(columns: [post_document_select_column!], distinct: Boolean): Int!\n  max: post_document_max_fields\n  min: post_document_min_fields\n}\n\n\"\"\"\norder by aggregate values of table \"post_document\"\n\"\"\"\ninput post_document_aggregate_order_by {\n  count: order_by\n  max: post_document_max_order_by\n  min: post_document_min_order_by\n}\n\n\"\"\"\ninput type for inserting array relation for remote table \"post_document\"\n\"\"\"\ninput post_document_arr_rel_insert_input {\n  data: [post_document_insert_input!]!\n\n  \"\"\"upsert condition\"\"\"\n  on_conflict: post_document_on_conflict\n}\n\n\"\"\"\nBoolean expression to filter rows from the table \"post_document\". All fields are combined with a logical 'AND'.\n\"\"\"\ninput post_document_bool_exp {\n  _and: [post_document_bool_exp!]\n  _not: post_document_bool_exp\n  _or: [post_document_bool_exp!]\n  added_at: timestamptz_comparison_exp\n  document: documents_bool_exp\n  document_id: uuid_comparison_exp\n  id: uuid_comparison_exp\n  post: posts_bool_exp\n  post_id: uuid_comparison_exp\n}\n\n\"\"\"\nunique or primary key constraints on table \"post_document\"\n\"\"\"\nenum post_document_constraint {\n  \"\"\"unique or primary key constraint\"\"\"\n  post_document_pkey\n\n  \"\"\"unique or primary key constraint\"\"\"\n  post_document_post_id_document_id_key\n}\n\n\"\"\"\ninput type for inserting data into table \"post_document\"\n\"\"\"\ninput post_document_insert_input {\n  added_at: timestamptz\n  document: documents_obj_rel_insert_input\n  document_id: uuid\n  id: uuid\n  post: posts_obj_rel_insert_input\n  post_id: uuid\n}\n\n\"\"\"aggregate max on columns\"\"\"\ntype post_document_max_fields {\n  added_at: timestamptz\n  document_id: uuid\n  id: uuid\n  post_id: uuid\n}\n\n\"\"\"\norder by max() on columns of table \"post_document\"\n\"\"\"\ninput post_document_max_order_by {\n  added_at: order_by\n  document_id: order_by\n  id: order_by\n  post_id: order_by\n}\n\n\"\"\"aggregate min on columns\"\"\"\ntype post_document_min_fields {\n  added_at: timestamptz\n  document_id: uuid\n  id: uuid\n  post_id: uuid\n}\n\n\"\"\"\norder by min() on columns of table \"post_document\"\n\"\"\"\ninput post_document_min_order_by {\n  added_at: order_by\n  document_id: order_by\n  id: order_by\n  post_id: order_by\n}\n\n\"\"\"\nresponse of any mutation on the table \"post_document\"\n\"\"\"\ntype post_document_mutation_response {\n  \"\"\"number of rows affected by the mutation\"\"\"\n  affected_rows: Int!\n\n  \"\"\"data from the rows affected by the mutation\"\"\"\n  returning: [post_document!]!\n}\n\n\"\"\"\non_conflict condition type for table \"post_document\"\n\"\"\"\ninput post_document_on_conflict {\n  constraint: post_document_constraint!\n  update_columns: [post_document_update_column!]! = []\n  where: post_document_bool_exp\n}\n\n\"\"\"Ordering options when selecting data from \"post_document\".\"\"\"\ninput post_document_order_by {\n  added_at: order_by\n  document: documents_order_by\n  document_id: order_by\n  id: order_by\n  post: posts_order_by\n  post_id: order_by\n}\n\n\"\"\"primary key columns input for table: post_document\"\"\"\ninput post_document_pk_columns_input {\n  id: uuid!\n}\n\n\"\"\"\nselect columns of table \"post_document\"\n\"\"\"\nenum post_document_select_column {\n  \"\"\"column name\"\"\"\n  added_at\n\n  \"\"\"column name\"\"\"\n  document_id\n\n  \"\"\"column name\"\"\"\n  id\n\n  \"\"\"column name\"\"\"\n  post_id\n}\n\n\"\"\"\ninput type for updating data in table \"post_document\"\n\"\"\"\ninput post_document_set_input {\n  added_at: timestamptz\n  document_id: uuid\n  id: uuid\n  post_id: uuid\n}\n\n\"\"\"\nupdate columns of table \"post_document\"\n\"\"\"\nenum post_document_update_column {\n  \"\"\"column name\"\"\"\n  added_at\n\n  \"\"\"column name\"\"\"\n  document_id\n\n  \"\"\"column name\"\"\"\n  id\n\n  \"\"\"column name\"\"\"\n  post_id\n}\n\n\"\"\"\ncolumns and relationships of \"post_link\"\n\"\"\"\ntype post_link {\n  added_at: time!\n  id: uuid!\n\n  \"\"\"An object relationship\"\"\"\n  link: links!\n  link_id: uuid!\n\n  \"\"\"An object relationship\"\"\"\n  post: posts!\n  post_id: uuid!\n}\n\n\"\"\"\naggregated selection of \"post_link\"\n\"\"\"\ntype post_link_aggregate {\n  aggregate: post_link_aggregate_fields\n  nodes: [post_link!]!\n}\n\n\"\"\"\naggregate fields of \"post_link\"\n\"\"\"\ntype post_link_aggregate_fields {\n  count(columns: [post_link_select_column!], distinct: Boolean): Int!\n  max: post_link_max_fields\n  min: post_link_min_fields\n}\n\n\"\"\"\norder by aggregate values of table \"post_link\"\n\"\"\"\ninput post_link_aggregate_order_by {\n  count: order_by\n  max: post_link_max_order_by\n  min: post_link_min_order_by\n}\n\n\"\"\"\ninput type for inserting array relation for remote table \"post_link\"\n\"\"\"\ninput post_link_arr_rel_insert_input {\n  data: [post_link_insert_input!]!\n\n  \"\"\"upsert condition\"\"\"\n  on_conflict: post_link_on_conflict\n}\n\n\"\"\"\nBoolean expression to filter rows from the table \"post_link\". All fields are combined with a logical 'AND'.\n\"\"\"\ninput post_link_bool_exp {\n  _and: [post_link_bool_exp!]\n  _not: post_link_bool_exp\n  _or: [post_link_bool_exp!]\n  added_at: time_comparison_exp\n  id: uuid_comparison_exp\n  link: links_bool_exp\n  link_id: uuid_comparison_exp\n  post: posts_bool_exp\n  post_id: uuid_comparison_exp\n}\n\n\"\"\"\nunique or primary key constraints on table \"post_link\"\n\"\"\"\nenum post_link_constraint {\n  \"\"\"unique or primary key constraint\"\"\"\n  post_link_pkey\n\n  \"\"\"unique or primary key constraint\"\"\"\n  post_link_post_id_link_id_key\n}\n\n\"\"\"\ninput type for inserting data into table \"post_link\"\n\"\"\"\ninput post_link_insert_input {\n  added_at: time\n  id: uuid\n  link: links_obj_rel_insert_input\n  link_id: uuid\n  post: posts_obj_rel_insert_input\n  post_id: uuid\n}\n\n\"\"\"aggregate max on columns\"\"\"\ntype post_link_max_fields {\n  id: uuid\n  link_id: uuid\n  post_id: uuid\n}\n\n\"\"\"\norder by max() on columns of table \"post_link\"\n\"\"\"\ninput post_link_max_order_by {\n  id: order_by\n  link_id: order_by\n  post_id: order_by\n}\n\n\"\"\"aggregate min on columns\"\"\"\ntype post_link_min_fields {\n  id: uuid\n  link_id: uuid\n  post_id: uuid\n}\n\n\"\"\"\norder by min() on columns of table \"post_link\"\n\"\"\"\ninput post_link_min_order_by {\n  id: order_by\n  link_id: order_by\n  post_id: order_by\n}\n\n\"\"\"\nresponse of any mutation on the table \"post_link\"\n\"\"\"\ntype post_link_mutation_response {\n  \"\"\"number of rows affected by the mutation\"\"\"\n  affected_rows: Int!\n\n  \"\"\"data from the rows affected by the mutation\"\"\"\n  returning: [post_link!]!\n}\n\n\"\"\"\non_conflict condition type for table \"post_link\"\n\"\"\"\ninput post_link_on_conflict {\n  constraint: post_link_constraint!\n  update_columns: [post_link_update_column!]! = []\n  where: post_link_bool_exp\n}\n\n\"\"\"Ordering options when selecting data from \"post_link\".\"\"\"\ninput post_link_order_by {\n  added_at: order_by\n  id: order_by\n  link: links_order_by\n  link_id: order_by\n  post: posts_order_by\n  post_id: order_by\n}\n\n\"\"\"primary key columns input for table: post_link\"\"\"\ninput post_link_pk_columns_input {\n  id: uuid!\n}\n\n\"\"\"\nselect columns of table \"post_link\"\n\"\"\"\nenum post_link_select_column {\n  \"\"\"column name\"\"\"\n  added_at\n\n  \"\"\"column name\"\"\"\n  id\n\n  \"\"\"column name\"\"\"\n  link_id\n\n  \"\"\"column name\"\"\"\n  post_id\n}\n\n\"\"\"\ninput type for updating data in table \"post_link\"\n\"\"\"\ninput post_link_set_input {\n  added_at: time\n  id: uuid\n  link_id: uuid\n  post_id: uuid\n}\n\n\"\"\"\nupdate columns of table \"post_link\"\n\"\"\"\nenum post_link_update_column {\n  \"\"\"column name\"\"\"\n  added_at\n\n  \"\"\"column name\"\"\"\n  id\n\n  \"\"\"column name\"\"\"\n  link_id\n\n  \"\"\"column name\"\"\"\n  post_id\n}\n\n\"\"\"\ncolumns and relationships of \"posts\"\n\"\"\"\ntype posts {\n  author: String!\n  category: String!\n  content: String!\n  created_at: timestamptz!\n  id: uuid!\n  image_url: String\n  keywords: String\n\n  \"\"\"An array relationship\"\"\"\n  post_documents(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [post_document_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [post_document_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: post_document_bool_exp\n  ): [post_document!]!\n\n  \"\"\"An aggregate relationship\"\"\"\n  post_documents_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [post_document_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [post_document_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: post_document_bool_exp\n  ): post_document_aggregate!\n\n  \"\"\"An array relationship\"\"\"\n  post_links(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [post_link_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [post_link_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: post_link_bool_exp\n  ): [post_link!]!\n\n  \"\"\"An aggregate relationship\"\"\"\n  post_links_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [post_link_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [post_link_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: post_link_bool_exp\n  ): post_link_aggregate!\n  published: Boolean!\n  title: String!\n  updated_at: timestamptz!\n}\n\n\"\"\"\naggregated selection of \"posts\"\n\"\"\"\ntype posts_aggregate {\n  aggregate: posts_aggregate_fields\n  nodes: [posts!]!\n}\n\n\"\"\"\naggregate fields of \"posts\"\n\"\"\"\ntype posts_aggregate_fields {\n  count(columns: [posts_select_column!], distinct: Boolean): Int!\n  max: posts_max_fields\n  min: posts_min_fields\n}\n\n\"\"\"\nBoolean expression to filter rows from the table \"posts\". All fields are combined with a logical 'AND'.\n\"\"\"\ninput posts_bool_exp {\n  _and: [posts_bool_exp!]\n  _not: posts_bool_exp\n  _or: [posts_bool_exp!]\n  author: String_comparison_exp\n  category: String_comparison_exp\n  content: String_comparison_exp\n  created_at: timestamptz_comparison_exp\n  id: uuid_comparison_exp\n  image_url: String_comparison_exp\n  keywords: String_comparison_exp\n  post_documents: post_document_bool_exp\n  post_links: post_link_bool_exp\n  published: Boolean_comparison_exp\n  title: String_comparison_exp\n  updated_at: timestamptz_comparison_exp\n}\n\n\"\"\"\nunique or primary key constraints on table \"posts\"\n\"\"\"\nenum posts_constraint {\n  \"\"\"unique or primary key constraint\"\"\"\n  posts_pkey\n}\n\n\"\"\"\ninput type for inserting data into table \"posts\"\n\"\"\"\ninput posts_insert_input {\n  author: String\n  category: String\n  content: String\n  created_at: timestamptz\n  id: uuid\n  image_url: String\n  keywords: String\n  post_documents: post_document_arr_rel_insert_input\n  post_links: post_link_arr_rel_insert_input\n  published: Boolean\n  title: String\n  updated_at: timestamptz\n}\n\n\"\"\"aggregate max on columns\"\"\"\ntype posts_max_fields {\n  author: String\n  category: String\n  content: String\n  created_at: timestamptz\n  id: uuid\n  image_url: String\n  keywords: String\n  title: String\n  updated_at: timestamptz\n}\n\n\"\"\"aggregate min on columns\"\"\"\ntype posts_min_fields {\n  author: String\n  category: String\n  content: String\n  created_at: timestamptz\n  id: uuid\n  image_url: String\n  keywords: String\n  title: String\n  updated_at: timestamptz\n}\n\n\"\"\"\nresponse of any mutation on the table \"posts\"\n\"\"\"\ntype posts_mutation_response {\n  \"\"\"number of rows affected by the mutation\"\"\"\n  affected_rows: Int!\n\n  \"\"\"data from the rows affected by the mutation\"\"\"\n  returning: [posts!]!\n}\n\n\"\"\"\ninput type for inserting object relation for remote table \"posts\"\n\"\"\"\ninput posts_obj_rel_insert_input {\n  data: posts_insert_input!\n\n  \"\"\"upsert condition\"\"\"\n  on_conflict: posts_on_conflict\n}\n\n\"\"\"\non_conflict condition type for table \"posts\"\n\"\"\"\ninput posts_on_conflict {\n  constraint: posts_constraint!\n  update_columns: [posts_update_column!]! = []\n  where: posts_bool_exp\n}\n\n\"\"\"Ordering options when selecting data from \"posts\".\"\"\"\ninput posts_order_by {\n  author: order_by\n  category: order_by\n  content: order_by\n  created_at: order_by\n  id: order_by\n  image_url: order_by\n  keywords: order_by\n  post_documents_aggregate: post_document_aggregate_order_by\n  post_links_aggregate: post_link_aggregate_order_by\n  published: order_by\n  title: order_by\n  updated_at: order_by\n}\n\n\"\"\"primary key columns input for table: posts\"\"\"\ninput posts_pk_columns_input {\n  id: uuid!\n}\n\n\"\"\"\nselect columns of table \"posts\"\n\"\"\"\nenum posts_select_column {\n  \"\"\"column name\"\"\"\n  author\n\n  \"\"\"column name\"\"\"\n  category\n\n  \"\"\"column name\"\"\"\n  content\n\n  \"\"\"column name\"\"\"\n  created_at\n\n  \"\"\"column name\"\"\"\n  id\n\n  \"\"\"column name\"\"\"\n  image_url\n\n  \"\"\"column name\"\"\"\n  keywords\n\n  \"\"\"column name\"\"\"\n  published\n\n  \"\"\"column name\"\"\"\n  title\n\n  \"\"\"column name\"\"\"\n  updated_at\n}\n\n\"\"\"\ninput type for updating data in table \"posts\"\n\"\"\"\ninput posts_set_input {\n  author: String\n  category: String\n  content: String\n  created_at: timestamptz\n  id: uuid\n  image_url: String\n  keywords: String\n  published: Boolean\n  title: String\n  updated_at: timestamptz\n}\n\n\"\"\"\nupdate columns of table \"posts\"\n\"\"\"\nenum posts_update_column {\n  \"\"\"column name\"\"\"\n  author\n\n  \"\"\"column name\"\"\"\n  category\n\n  \"\"\"column name\"\"\"\n  content\n\n  \"\"\"column name\"\"\"\n  created_at\n\n  \"\"\"column name\"\"\"\n  id\n\n  \"\"\"column name\"\"\"\n  image_url\n\n  \"\"\"column name\"\"\"\n  keywords\n\n  \"\"\"column name\"\"\"\n  published\n\n  \"\"\"column name\"\"\"\n  title\n\n  \"\"\"column name\"\"\"\n  updated_at\n}\n\ntype query_root {\n  \"\"\"\n  fetch data from the table: \"categories\"\n  \"\"\"\n  categories(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [categories_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [categories_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: categories_bool_exp\n  ): [categories!]!\n\n  \"\"\"An aggregate relationship\"\"\"\n  categories_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [categories_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [categories_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: categories_bool_exp\n  ): categories_aggregate!\n\n  \"\"\"fetch data from the table: \"categories\" using primary key columns\"\"\"\n  categories_by_pk(id: uuid!): categories\n\n  \"\"\"\n  fetch data from the table: \"documents\"\n  \"\"\"\n  documents(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [documents_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [documents_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: documents_bool_exp\n  ): [documents!]!\n\n  \"\"\"\n  fetch aggregated fields from the table: \"documents\"\n  \"\"\"\n  documents_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [documents_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [documents_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: documents_bool_exp\n  ): documents_aggregate!\n\n  \"\"\"fetch data from the table: \"documents\" using primary key columns\"\"\"\n  documents_by_pk(id: uuid!): documents\n\n  \"\"\"\n  fetch data from the table: \"events\"\n  \"\"\"\n  events(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [events_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [events_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: events_bool_exp\n  ): [events!]!\n\n  \"\"\"\n  fetch aggregated fields from the table: \"events\"\n  \"\"\"\n  events_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [events_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [events_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: events_bool_exp\n  ): events_aggregate!\n\n  \"\"\"fetch data from the table: \"events\" using primary key columns\"\"\"\n  events_by_pk(id: uuid!): events\n\n  \"\"\"\n  fetch data from the table: \"links\"\n  \"\"\"\n  links(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [links_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [links_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: links_bool_exp\n  ): [links!]!\n\n  \"\"\"\n  fetch aggregated fields from the table: \"links\"\n  \"\"\"\n  links_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [links_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [links_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: links_bool_exp\n  ): links_aggregate!\n\n  \"\"\"fetch data from the table: \"links\" using primary key columns\"\"\"\n  links_by_pk(id: uuid!): links\n\n  \"\"\"\n  fetch data from the table: \"page_categorie\"\n  \"\"\"\n  page_categorie(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [page_categorie_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [page_categorie_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: page_categorie_bool_exp\n  ): [page_categorie!]!\n\n  \"\"\"\n  fetch aggregated fields from the table: \"page_categorie\"\n  \"\"\"\n  page_categorie_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [page_categorie_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [page_categorie_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: page_categorie_bool_exp\n  ): page_categorie_aggregate!\n\n  \"\"\"fetch data from the table: \"page_categorie\" using primary key columns\"\"\"\n  page_categorie_by_pk(id: Int!): page_categorie\n\n  \"\"\"\n  fetch data from the table: \"page_document\"\n  \"\"\"\n  page_document(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [page_document_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [page_document_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: page_document_bool_exp\n  ): [page_document!]!\n\n  \"\"\"\n  fetch aggregated fields from the table: \"page_document\"\n  \"\"\"\n  page_document_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [page_document_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [page_document_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: page_document_bool_exp\n  ): page_document_aggregate!\n\n  \"\"\"fetch data from the table: \"page_document\" using primary key columns\"\"\"\n  page_document_by_pk(id: uuid!): page_document\n\n  \"\"\"\n  fetch data from the table: \"page_link\"\n  \"\"\"\n  page_link(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [page_link_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [page_link_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: page_link_bool_exp\n  ): [page_link!]!\n\n  \"\"\"\n  fetch aggregated fields from the table: \"page_link\"\n  \"\"\"\n  page_link_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [page_link_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [page_link_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: page_link_bool_exp\n  ): page_link_aggregate!\n\n  \"\"\"fetch data from the table: \"page_link\" using primary key columns\"\"\"\n  page_link_by_pk(id: uuid!): page_link\n\n  \"\"\"\n  fetch data from the table: \"pages\"\n  \"\"\"\n  pages(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [pages_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [pages_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: pages_bool_exp\n  ): [pages!]!\n\n  \"\"\"\n  fetch aggregated fields from the table: \"pages\"\n  \"\"\"\n  pages_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [pages_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [pages_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: pages_bool_exp\n  ): pages_aggregate!\n\n  \"\"\"fetch data from the table: \"pages\" using primary key columns\"\"\"\n  pages_by_pk(id: uuid!): pages\n\n  \"\"\"\n  fetch data from the table: \"post_document\"\n  \"\"\"\n  post_document(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [post_document_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [post_document_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: post_document_bool_exp\n  ): [post_document!]!\n\n  \"\"\"\n  fetch aggregated fields from the table: \"post_document\"\n  \"\"\"\n  post_document_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [post_document_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [post_document_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: post_document_bool_exp\n  ): post_document_aggregate!\n\n  \"\"\"fetch data from the table: \"post_document\" using primary key columns\"\"\"\n  post_document_by_pk(id: uuid!): post_document\n\n  \"\"\"\n  fetch data from the table: \"post_link\"\n  \"\"\"\n  post_link(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [post_link_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [post_link_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: post_link_bool_exp\n  ): [post_link!]!\n\n  \"\"\"\n  fetch aggregated fields from the table: \"post_link\"\n  \"\"\"\n  post_link_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [post_link_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [post_link_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: post_link_bool_exp\n  ): post_link_aggregate!\n\n  \"\"\"fetch data from the table: \"post_link\" using primary key columns\"\"\"\n  post_link_by_pk(id: uuid!): post_link\n\n  \"\"\"\n  fetch data from the table: \"posts\"\n  \"\"\"\n  posts(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [posts_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [posts_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: posts_bool_exp\n  ): [posts!]!\n\n  \"\"\"\n  fetch aggregated fields from the table: \"posts\"\n  \"\"\"\n  posts_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [posts_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [posts_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: posts_bool_exp\n  ): posts_aggregate!\n\n  \"\"\"fetch data from the table: \"posts\" using primary key columns\"\"\"\n  posts_by_pk(id: uuid!): posts\n\n  \"\"\"\n  fetch data from the table: \"site\"\n  \"\"\"\n  site(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [site_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [site_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: site_bool_exp\n  ): [site!]!\n\n  \"\"\"\n  fetch aggregated fields from the table: \"site\"\n  \"\"\"\n  site_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [site_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [site_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: site_bool_exp\n  ): site_aggregate!\n\n  \"\"\"fetch data from the table: \"site\" using primary key columns\"\"\"\n  site_by_pk(id: Int!): site\n}\n\n\"\"\"\ncolumns and relationships of \"site\"\n\"\"\"\ntype site {\n  about: String\n  created_at: timestamptz!\n  dashboard_context_id: Int\n  description: String\n  geostory_context_id: Int\n  id: Int!\n  legal: String\n  logo: String\n  map_context_id: Int\n  name: String!\n  title: String\n  updated_at: timestamptz!\n}\n\n\"\"\"\naggregated selection of \"site\"\n\"\"\"\ntype site_aggregate {\n  aggregate: site_aggregate_fields\n  nodes: [site!]!\n}\n\n\"\"\"\naggregate fields of \"site\"\n\"\"\"\ntype site_aggregate_fields {\n  avg: site_avg_fields\n  count(columns: [site_select_column!], distinct: Boolean): Int!\n  max: site_max_fields\n  min: site_min_fields\n  stddev: site_stddev_fields\n  stddev_pop: site_stddev_pop_fields\n  stddev_samp: site_stddev_samp_fields\n  sum: site_sum_fields\n  var_pop: site_var_pop_fields\n  var_samp: site_var_samp_fields\n  variance: site_variance_fields\n}\n\n\"\"\"aggregate avg on columns\"\"\"\ntype site_avg_fields {\n  dashboard_context_id: Float\n  geostory_context_id: Float\n  id: Float\n  map_context_id: Float\n}\n\n\"\"\"\nBoolean expression to filter rows from the table \"site\". All fields are combined with a logical 'AND'.\n\"\"\"\ninput site_bool_exp {\n  _and: [site_bool_exp!]\n  _not: site_bool_exp\n  _or: [site_bool_exp!]\n  about: String_comparison_exp\n  created_at: timestamptz_comparison_exp\n  dashboard_context_id: Int_comparison_exp\n  description: String_comparison_exp\n  geostory_context_id: Int_comparison_exp\n  id: Int_comparison_exp\n  legal: String_comparison_exp\n  logo: String_comparison_exp\n  map_context_id: Int_comparison_exp\n  name: String_comparison_exp\n  title: String_comparison_exp\n  updated_at: timestamptz_comparison_exp\n}\n\n\"\"\"\nunique or primary key constraints on table \"site\"\n\"\"\"\nenum site_constraint {\n  \"\"\"unique or primary key constraint\"\"\"\n  site_pkey\n}\n\n\"\"\"\ninput type for incrementing numeric columns in table \"site\"\n\"\"\"\ninput site_inc_input {\n  dashboard_context_id: Int\n  geostory_context_id: Int\n  id: Int\n  map_context_id: Int\n}\n\n\"\"\"\ninput type for inserting data into table \"site\"\n\"\"\"\ninput site_insert_input {\n  about: String\n  created_at: timestamptz\n  dashboard_context_id: Int\n  description: String\n  geostory_context_id: Int\n  id: Int\n  legal: String\n  logo: String\n  map_context_id: Int\n  name: String\n  title: String\n  updated_at: timestamptz\n}\n\n\"\"\"aggregate max on columns\"\"\"\ntype site_max_fields {\n  about: String\n  created_at: timestamptz\n  dashboard_context_id: Int\n  description: String\n  geostory_context_id: Int\n  id: Int\n  legal: String\n  logo: String\n  map_context_id: Int\n  name: String\n  title: String\n  updated_at: timestamptz\n}\n\n\"\"\"aggregate min on columns\"\"\"\ntype site_min_fields {\n  about: String\n  created_at: timestamptz\n  dashboard_context_id: Int\n  description: String\n  geostory_context_id: Int\n  id: Int\n  legal: String\n  logo: String\n  map_context_id: Int\n  name: String\n  title: String\n  updated_at: timestamptz\n}\n\n\"\"\"\nresponse of any mutation on the table \"site\"\n\"\"\"\ntype site_mutation_response {\n  \"\"\"number of rows affected by the mutation\"\"\"\n  affected_rows: Int!\n\n  \"\"\"data from the rows affected by the mutation\"\"\"\n  returning: [site!]!\n}\n\n\"\"\"\non_conflict condition type for table \"site\"\n\"\"\"\ninput site_on_conflict {\n  constraint: site_constraint!\n  update_columns: [site_update_column!]! = []\n  where: site_bool_exp\n}\n\n\"\"\"Ordering options when selecting data from \"site\".\"\"\"\ninput site_order_by {\n  about: order_by\n  created_at: order_by\n  dashboard_context_id: order_by\n  description: order_by\n  geostory_context_id: order_by\n  id: order_by\n  legal: order_by\n  logo: order_by\n  map_context_id: order_by\n  name: order_by\n  title: order_by\n  updated_at: order_by\n}\n\n\"\"\"primary key columns input for table: site\"\"\"\ninput site_pk_columns_input {\n  id: Int!\n}\n\n\"\"\"\nselect columns of table \"site\"\n\"\"\"\nenum site_select_column {\n  \"\"\"column name\"\"\"\n  about\n\n  \"\"\"column name\"\"\"\n  created_at\n\n  \"\"\"column name\"\"\"\n  dashboard_context_id\n\n  \"\"\"column name\"\"\"\n  description\n\n  \"\"\"column name\"\"\"\n  geostory_context_id\n\n  \"\"\"column name\"\"\"\n  id\n\n  \"\"\"column name\"\"\"\n  legal\n\n  \"\"\"column name\"\"\"\n  logo\n\n  \"\"\"column name\"\"\"\n  map_context_id\n\n  \"\"\"column name\"\"\"\n  name\n\n  \"\"\"column name\"\"\"\n  title\n\n  \"\"\"column name\"\"\"\n  updated_at\n}\n\n\"\"\"\ninput type for updating data in table \"site\"\n\"\"\"\ninput site_set_input {\n  about: String\n  created_at: timestamptz\n  dashboard_context_id: Int\n  description: String\n  geostory_context_id: Int\n  id: Int\n  legal: String\n  logo: String\n  map_context_id: Int\n  name: String\n  title: String\n  updated_at: timestamptz\n}\n\n\"\"\"aggregate stddev on columns\"\"\"\ntype site_stddev_fields {\n  dashboard_context_id: Float\n  geostory_context_id: Float\n  id: Float\n  map_context_id: Float\n}\n\n\"\"\"aggregate stddev_pop on columns\"\"\"\ntype site_stddev_pop_fields {\n  dashboard_context_id: Float\n  geostory_context_id: Float\n  id: Float\n  map_context_id: Float\n}\n\n\"\"\"aggregate stddev_samp on columns\"\"\"\ntype site_stddev_samp_fields {\n  dashboard_context_id: Float\n  geostory_context_id: Float\n  id: Float\n  map_context_id: Float\n}\n\n\"\"\"aggregate sum on columns\"\"\"\ntype site_sum_fields {\n  dashboard_context_id: Int\n  geostory_context_id: Int\n  id: Int\n  map_context_id: Int\n}\n\n\"\"\"\nupdate columns of table \"site\"\n\"\"\"\nenum site_update_column {\n  \"\"\"column name\"\"\"\n  about\n\n  \"\"\"column name\"\"\"\n  created_at\n\n  \"\"\"column name\"\"\"\n  dashboard_context_id\n\n  \"\"\"column name\"\"\"\n  description\n\n  \"\"\"column name\"\"\"\n  geostory_context_id\n\n  \"\"\"column name\"\"\"\n  id\n\n  \"\"\"column name\"\"\"\n  legal\n\n  \"\"\"column name\"\"\"\n  logo\n\n  \"\"\"column name\"\"\"\n  map_context_id\n\n  \"\"\"column name\"\"\"\n  name\n\n  \"\"\"column name\"\"\"\n  title\n\n  \"\"\"column name\"\"\"\n  updated_at\n}\n\n\"\"\"aggregate var_pop on columns\"\"\"\ntype site_var_pop_fields {\n  dashboard_context_id: Float\n  geostory_context_id: Float\n  id: Float\n  map_context_id: Float\n}\n\n\"\"\"aggregate var_samp on columns\"\"\"\ntype site_var_samp_fields {\n  dashboard_context_id: Float\n  geostory_context_id: Float\n  id: Float\n  map_context_id: Float\n}\n\n\"\"\"aggregate variance on columns\"\"\"\ntype site_variance_fields {\n  dashboard_context_id: Float\n  geostory_context_id: Float\n  id: Float\n  map_context_id: Float\n}\n\ntype subscription_root {\n  \"\"\"\n  fetch data from the table: \"categories\"\n  \"\"\"\n  categories(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [categories_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [categories_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: categories_bool_exp\n  ): [categories!]!\n\n  \"\"\"An aggregate relationship\"\"\"\n  categories_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [categories_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [categories_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: categories_bool_exp\n  ): categories_aggregate!\n\n  \"\"\"fetch data from the table: \"categories\" using primary key columns\"\"\"\n  categories_by_pk(id: uuid!): categories\n\n  \"\"\"\n  fetch data from the table: \"documents\"\n  \"\"\"\n  documents(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [documents_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [documents_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: documents_bool_exp\n  ): [documents!]!\n\n  \"\"\"\n  fetch aggregated fields from the table: \"documents\"\n  \"\"\"\n  documents_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [documents_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [documents_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: documents_bool_exp\n  ): documents_aggregate!\n\n  \"\"\"fetch data from the table: \"documents\" using primary key columns\"\"\"\n  documents_by_pk(id: uuid!): documents\n\n  \"\"\"\n  fetch data from the table: \"events\"\n  \"\"\"\n  events(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [events_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [events_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: events_bool_exp\n  ): [events!]!\n\n  \"\"\"\n  fetch aggregated fields from the table: \"events\"\n  \"\"\"\n  events_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [events_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [events_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: events_bool_exp\n  ): events_aggregate!\n\n  \"\"\"fetch data from the table: \"events\" using primary key columns\"\"\"\n  events_by_pk(id: uuid!): events\n\n  \"\"\"\n  fetch data from the table: \"links\"\n  \"\"\"\n  links(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [links_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [links_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: links_bool_exp\n  ): [links!]!\n\n  \"\"\"\n  fetch aggregated fields from the table: \"links\"\n  \"\"\"\n  links_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [links_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [links_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: links_bool_exp\n  ): links_aggregate!\n\n  \"\"\"fetch data from the table: \"links\" using primary key columns\"\"\"\n  links_by_pk(id: uuid!): links\n\n  \"\"\"\n  fetch data from the table: \"page_categorie\"\n  \"\"\"\n  page_categorie(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [page_categorie_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [page_categorie_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: page_categorie_bool_exp\n  ): [page_categorie!]!\n\n  \"\"\"\n  fetch aggregated fields from the table: \"page_categorie\"\n  \"\"\"\n  page_categorie_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [page_categorie_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [page_categorie_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: page_categorie_bool_exp\n  ): page_categorie_aggregate!\n\n  \"\"\"fetch data from the table: \"page_categorie\" using primary key columns\"\"\"\n  page_categorie_by_pk(id: Int!): page_categorie\n\n  \"\"\"\n  fetch data from the table: \"page_document\"\n  \"\"\"\n  page_document(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [page_document_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [page_document_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: page_document_bool_exp\n  ): [page_document!]!\n\n  \"\"\"\n  fetch aggregated fields from the table: \"page_document\"\n  \"\"\"\n  page_document_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [page_document_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [page_document_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: page_document_bool_exp\n  ): page_document_aggregate!\n\n  \"\"\"fetch data from the table: \"page_document\" using primary key columns\"\"\"\n  page_document_by_pk(id: uuid!): page_document\n\n  \"\"\"\n  fetch data from the table: \"page_link\"\n  \"\"\"\n  page_link(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [page_link_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [page_link_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: page_link_bool_exp\n  ): [page_link!]!\n\n  \"\"\"\n  fetch aggregated fields from the table: \"page_link\"\n  \"\"\"\n  page_link_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [page_link_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [page_link_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: page_link_bool_exp\n  ): page_link_aggregate!\n\n  \"\"\"fetch data from the table: \"page_link\" using primary key columns\"\"\"\n  page_link_by_pk(id: uuid!): page_link\n\n  \"\"\"\n  fetch data from the table: \"pages\"\n  \"\"\"\n  pages(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [pages_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [pages_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: pages_bool_exp\n  ): [pages!]!\n\n  \"\"\"\n  fetch aggregated fields from the table: \"pages\"\n  \"\"\"\n  pages_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [pages_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [pages_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: pages_bool_exp\n  ): pages_aggregate!\n\n  \"\"\"fetch data from the table: \"pages\" using primary key columns\"\"\"\n  pages_by_pk(id: uuid!): pages\n\n  \"\"\"\n  fetch data from the table: \"post_document\"\n  \"\"\"\n  post_document(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [post_document_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [post_document_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: post_document_bool_exp\n  ): [post_document!]!\n\n  \"\"\"\n  fetch aggregated fields from the table: \"post_document\"\n  \"\"\"\n  post_document_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [post_document_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [post_document_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: post_document_bool_exp\n  ): post_document_aggregate!\n\n  \"\"\"fetch data from the table: \"post_document\" using primary key columns\"\"\"\n  post_document_by_pk(id: uuid!): post_document\n\n  \"\"\"\n  fetch data from the table: \"post_link\"\n  \"\"\"\n  post_link(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [post_link_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [post_link_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: post_link_bool_exp\n  ): [post_link!]!\n\n  \"\"\"\n  fetch aggregated fields from the table: \"post_link\"\n  \"\"\"\n  post_link_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [post_link_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [post_link_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: post_link_bool_exp\n  ): post_link_aggregate!\n\n  \"\"\"fetch data from the table: \"post_link\" using primary key columns\"\"\"\n  post_link_by_pk(id: uuid!): post_link\n\n  \"\"\"\n  fetch data from the table: \"posts\"\n  \"\"\"\n  posts(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [posts_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [posts_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: posts_bool_exp\n  ): [posts!]!\n\n  \"\"\"\n  fetch aggregated fields from the table: \"posts\"\n  \"\"\"\n  posts_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [posts_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [posts_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: posts_bool_exp\n  ): posts_aggregate!\n\n  \"\"\"fetch data from the table: \"posts\" using primary key columns\"\"\"\n  posts_by_pk(id: uuid!): posts\n\n  \"\"\"\n  fetch data from the table: \"site\"\n  \"\"\"\n  site(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [site_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [site_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: site_bool_exp\n  ): [site!]!\n\n  \"\"\"\n  fetch aggregated fields from the table: \"site\"\n  \"\"\"\n  site_aggregate(\n    \"\"\"distinct select on columns\"\"\"\n    distinct_on: [site_select_column!]\n\n    \"\"\"limit the number of rows returned\"\"\"\n    limit: Int\n\n    \"\"\"skip the first n rows. Use only with order_by\"\"\"\n    offset: Int\n\n    \"\"\"sort the rows by one or more columns\"\"\"\n    order_by: [site_order_by!]\n\n    \"\"\"filter the rows returned\"\"\"\n    where: site_bool_exp\n  ): site_aggregate!\n\n  \"\"\"fetch data from the table: \"site\" using primary key columns\"\"\"\n  site_by_pk(id: Int!): site\n}\n\nscalar time\n\n\"\"\"\nBoolean expression to compare columns of type \"time\". All fields are combined with logical 'AND'.\n\"\"\"\ninput time_comparison_exp {\n  _eq: time\n  _gt: time\n  _gte: time\n  _in: [time!]\n  _is_null: Boolean\n  _lt: time\n  _lte: time\n  _neq: time\n  _nin: [time!]\n}\n\nscalar timestamptz\n\n\"\"\"\nBoolean expression to compare columns of type \"timestamptz\". All fields are combined with logical 'AND'.\n\"\"\"\ninput timestamptz_comparison_exp {\n  _eq: timestamptz\n  _gt: timestamptz\n  _gte: timestamptz\n  _in: [timestamptz!]\n  _is_null: Boolean\n  _lt: timestamptz\n  _lte: timestamptz\n  _neq: timestamptz\n  _nin: [timestamptz!]\n}\n\nscalar uuid\n\n\"\"\"\nBoolean expression to compare columns of type \"uuid\". All fields are combined with logical 'AND'.\n\"\"\"\ninput uuid_comparison_exp {\n  _eq: uuid\n  _gt: uuid\n  _gte: uuid\n  _in: [uuid!]\n  _is_null: Boolean\n  _lt: uuid\n  _lte: uuid\n  _neq: uuid\n  _nin: [uuid!]\n}\n"}